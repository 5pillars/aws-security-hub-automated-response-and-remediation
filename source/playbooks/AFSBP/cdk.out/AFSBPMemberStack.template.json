{
  "Description": "(SO0111C) AWS Security Hub Automated Response & Remediation AFSBP 1.0.0 Compliance Pack - Member Account, v1.4.0",
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters": {
    "SecHubAdminAccount": {
      "Type": "String",
      "AllowedPattern": "\\d{12}",
      "Description": "Admin account number"
    },
    "AFSBPAutoScaling1Active": {
      "Type": "String",
      "Default": "Available",
      "AllowedValues": [
        "Available",
        "NOT Available"
      ],
      "Description": "Enable/disable availability of remediation for AFSBP version 1.0.0 Control AutoScaling.1 in Security Hub Console Custom Actions. If NOT Available the remediation cannot be triggered from the Security Hub console in the Security Hub Admin account."
    },
    "AFSBPCloudTrail1Active": {
      "Type": "String",
      "Default": "Available",
      "AllowedValues": [
        "Available",
        "NOT Available"
      ],
      "Description": "Enable/disable availability of remediation for AFSBP version 1.0.0 Control CloudTrail.1 in Security Hub Console Custom Actions. If NOT Available the remediation cannot be triggered from the Security Hub console in the Security Hub Admin account."
    },
    "AFSBPCloudTrail2Active": {
      "Type": "String",
      "Default": "Available",
      "AllowedValues": [
        "Available",
        "NOT Available"
      ],
      "Description": "Enable/disable availability of remediation for AFSBP version 1.0.0 Control CloudTrail.2 in Security Hub Console Custom Actions. If NOT Available the remediation cannot be triggered from the Security Hub console in the Security Hub Admin account."
    },
    "AFSBPConfig1Active": {
      "Type": "String",
      "Default": "Available",
      "AllowedValues": [
        "Available",
        "NOT Available"
      ],
      "Description": "Enable/disable availability of remediation for AFSBP version 1.0.0 Control Config.1 in Security Hub Console Custom Actions. If NOT Available the remediation cannot be triggered from the Security Hub console in the Security Hub Admin account."
    },
    "AFSBPEC21Active": {
      "Type": "String",
      "Default": "Available",
      "AllowedValues": [
        "Available",
        "NOT Available"
      ],
      "Description": "Enable/disable availability of remediation for AFSBP version 1.0.0 Control EC2.1 in Security Hub Console Custom Actions. If NOT Available the remediation cannot be triggered from the Security Hub console in the Security Hub Admin account."
    },
    "AFSBPEC22Active": {
      "Type": "String",
      "Default": "Available",
      "AllowedValues": [
        "Available",
        "NOT Available"
      ],
      "Description": "Enable/disable availability of remediation for AFSBP version 1.0.0 Control EC2.2 in Security Hub Console Custom Actions. If NOT Available the remediation cannot be triggered from the Security Hub console in the Security Hub Admin account."
    },
    "AFSBPEC26Active": {
      "Type": "String",
      "Default": "Available",
      "AllowedValues": [
        "Available",
        "NOT Available"
      ],
      "Description": "Enable/disable availability of remediation for AFSBP version 1.0.0 Control EC2.6 in Security Hub Console Custom Actions. If NOT Available the remediation cannot be triggered from the Security Hub console in the Security Hub Admin account."
    },
    "AFSBPEC27Active": {
      "Type": "String",
      "Default": "Available",
      "AllowedValues": [
        "Available",
        "NOT Available"
      ],
      "Description": "Enable/disable availability of remediation for AFSBP version 1.0.0 Control EC2.7 in Security Hub Console Custom Actions. If NOT Available the remediation cannot be triggered from the Security Hub console in the Security Hub Admin account."
    },
    "AFSBPIAM7Active": {
      "Type": "String",
      "Default": "Available",
      "AllowedValues": [
        "Available",
        "NOT Available"
      ],
      "Description": "Enable/disable availability of remediation for AFSBP version 1.0.0 Control IAM.7 in Security Hub Console Custom Actions. If NOT Available the remediation cannot be triggered from the Security Hub console in the Security Hub Admin account."
    },
    "AFSBPIAM8Active": {
      "Type": "String",
      "Default": "Available",
      "AllowedValues": [
        "Available",
        "NOT Available"
      ],
      "Description": "Enable/disable availability of remediation for AFSBP version 1.0.0 Control IAM.8 in Security Hub Console Custom Actions. If NOT Available the remediation cannot be triggered from the Security Hub console in the Security Hub Admin account."
    },
    "AFSBPLambda1Active": {
      "Type": "String",
      "Default": "Available",
      "AllowedValues": [
        "Available",
        "NOT Available"
      ],
      "Description": "Enable/disable availability of remediation for AFSBP version 1.0.0 Control Lambda.1 in Security Hub Console Custom Actions. If NOT Available the remediation cannot be triggered from the Security Hub console in the Security Hub Admin account."
    },
    "AFSBPRDS1Active": {
      "Type": "String",
      "Default": "Available",
      "AllowedValues": [
        "Available",
        "NOT Available"
      ],
      "Description": "Enable/disable availability of remediation for AFSBP version 1.0.0 Control RDS.1 in Security Hub Console Custom Actions. If NOT Available the remediation cannot be triggered from the Security Hub console in the Security Hub Admin account."
    },
    "AFSBPRDS6Active": {
      "Type": "String",
      "Default": "Available",
      "AllowedValues": [
        "Available",
        "NOT Available"
      ],
      "Description": "Enable/disable availability of remediation for AFSBP version 1.0.0 Control RDS.6 in Security Hub Console Custom Actions. If NOT Available the remediation cannot be triggered from the Security Hub console in the Security Hub Admin account."
    },
    "AFSBPRDS7Active": {
      "Type": "String",
      "Default": "Available",
      "AllowedValues": [
        "Available",
        "NOT Available"
      ],
      "Description": "Enable/disable availability of remediation for AFSBP version 1.0.0 Control RDS.7 in Security Hub Console Custom Actions. If NOT Available the remediation cannot be triggered from the Security Hub console in the Security Hub Admin account."
    },
    "AFSBPS31Active": {
      "Type": "String",
      "Default": "Available",
      "AllowedValues": [
        "Available",
        "NOT Available"
      ],
      "Description": "Enable/disable availability of remediation for AFSBP version 1.0.0 Control S3.1 in Security Hub Console Custom Actions. If NOT Available the remediation cannot be triggered from the Security Hub console in the Security Hub Admin account."
    },
    "AFSBPS32Active": {
      "Type": "String",
      "Default": "Available",
      "AllowedValues": [
        "Available",
        "NOT Available"
      ],
      "Description": "Enable/disable availability of remediation for AFSBP version 1.0.0 Control S3.2 in Security Hub Console Custom Actions. If NOT Available the remediation cannot be triggered from the Security Hub console in the Security Hub Admin account."
    },
    "AFSBPS35Active": {
      "Type": "String",
      "Default": "Available",
      "AllowedValues": [
        "Available",
        "NOT Available"
      ],
      "Description": "Enable/disable availability of remediation for AFSBP version 1.0.0 Control S3.5 in Security Hub Console Custom Actions. If NOT Available the remediation cannot be triggered from the Security Hub console in the Security Hub Admin account."
    }
  },
  "Conditions": {
    "AFSBPAutoScaling1EnableAutoScaling1ConditionCE5EE793": {
      "Fn::Equals": [
        {
          "Ref": "AFSBPAutoScaling1Active"
        },
        "Available"
      ]
    },
    "AFSBPCloudTrail1EnableCloudTrail1ConditionC860CCC8": {
      "Fn::Equals": [
        {
          "Ref": "AFSBPCloudTrail1Active"
        },
        "Available"
      ]
    },
    "AFSBPCloudTrail2EnableCloudTrail2Condition0DA5CF58": {
      "Fn::Equals": [
        {
          "Ref": "AFSBPCloudTrail2Active"
        },
        "Available"
      ]
    },
    "AFSBPConfig1EnableConfig1Condition7EADFF11": {
      "Fn::Equals": [
        {
          "Ref": "AFSBPConfig1Active"
        },
        "Available"
      ]
    },
    "AFSBPEC21EnableEC21ConditionA4D0F59B": {
      "Fn::Equals": [
        {
          "Ref": "AFSBPEC21Active"
        },
        "Available"
      ]
    },
    "AFSBPEC22EnableEC22Condition2349855D": {
      "Fn::Equals": [
        {
          "Ref": "AFSBPEC22Active"
        },
        "Available"
      ]
    },
    "AFSBPEC26EnableEC26Condition4F53E96A": {
      "Fn::Equals": [
        {
          "Ref": "AFSBPEC26Active"
        },
        "Available"
      ]
    },
    "AFSBPEC27EnableEC27ConditionFC2F394C": {
      "Fn::Equals": [
        {
          "Ref": "AFSBPEC27Active"
        },
        "Available"
      ]
    },
    "AFSBPIAM7EnableIAM7Condition9B59FBA4": {
      "Fn::Equals": [
        {
          "Ref": "AFSBPIAM7Active"
        },
        "Available"
      ]
    },
    "AFSBPIAM8EnableIAM8Condition41C0E0BC": {
      "Fn::Equals": [
        {
          "Ref": "AFSBPIAM8Active"
        },
        "Available"
      ]
    },
    "AFSBPLambda1EnableLambda1Condition4E1A1855": {
      "Fn::Equals": [
        {
          "Ref": "AFSBPLambda1Active"
        },
        "Available"
      ]
    },
    "AFSBPRDS1EnableRDS1ConditionB553606B": {
      "Fn::Equals": [
        {
          "Ref": "AFSBPRDS1Active"
        },
        "Available"
      ]
    },
    "AFSBPRDS6EnableRDS6ConditionB5AA0302": {
      "Fn::Equals": [
        {
          "Ref": "AFSBPRDS6Active"
        },
        "Available"
      ]
    },
    "AFSBPRDS7EnableRDS7ConditionC6475B87": {
      "Fn::Equals": [
        {
          "Ref": "AFSBPRDS7Active"
        },
        "Available"
      ]
    },
    "AFSBPS31EnableS31Condition57BE9782": {
      "Fn::Equals": [
        {
          "Ref": "AFSBPS31Active"
        },
        "Available"
      ]
    },
    "AFSBPS32EnableS32ConditionE7296642": {
      "Fn::Equals": [
        {
          "Ref": "AFSBPS32Active"
        },
        "Available"
      ]
    },
    "AFSBPS35EnableS35Condition73E5EDAD": {
      "Fn::Equals": [
        {
          "Ref": "AFSBPS35Active"
        },
        "Available"
      ]
    }
  },
  "Resources": {
    "AFSBPAutoScaling1AutomationDocumentA3B91B9D": {
      "Type": "AWS::SSM::Document",
      "Properties": {
        "Content": {
          "description": "### Document Name - SHARR-AFSBP_1.0.0_AutoScaling.1\n\n## What does this document do?\nThis document enables ELB healthcheck on a given AutoScaling Group using the [UpdateAutoScalingGroup] API.\n\n## Input Parameters\n* Finding: (Required) Security Hub finding details JSON\n* HealthCheckGracePeriod: (Optional) Health check grace period when ELB health check is Enabled\nDefault: 30 seconds\n* AutomationAssumeRole: (Required) The ARN of the role that allows Automation to perform the actions on your behalf.\n\n## Output Parameters\n* Remediation.Output\n\n## Documentation Links\n* [AFSBP AutoScaling.1](https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-standards-fsbp-controls.html#fsbp-autoscaling-1)\n",
          "schemaVersion": "0.3",
          "assumeRole": "{{ AutomationAssumeRole }}",
          "outputs": [
            "Remediation.Output",
            "ParseInput.AffectedObject"
          ],
          "parameters": {
            "Finding": {
              "type": "StringMap",
              "description": "The input from Step function for ASG1 finding"
            },
            "HealthCheckGracePeriod": {
              "type": "Integer",
              "default": 30,
              "description": "ELB Health Check Grace Period"
            },
            "AutomationAssumeRole": {
              "type": "String",
              "description": "(Optional) The ARN of the role that allows Automation to perform the actions on your behalf.",
              "default": "",
              "allowedPattern": "^arn:(?:aws|aws-us-gov|aws-cn):iam::\\d{12}:role/[\\w+=,.@-]+"
            }
          },
          "mainSteps": [
            {
              "name": "ParseInput",
              "action": "aws:executeScript",
              "outputs": [
                {
                  "Name": "AutoScalingGroupName",
                  "Selector": "$.Payload.resource_id",
                  "Type": "String"
                },
                {
                  "Name": "FindingId",
                  "Selector": "$.Payload.finding_id",
                  "Type": "String"
                },
                {
                  "Name": "ProductArn",
                  "Selector": "$.Payload.product_arn",
                  "Type": "String"
                },
                {
                  "Name": "AffectedObject",
                  "Selector": "$.Payload.object",
                  "Type": "StringMap"
                }
              ],
              "inputs": {
                "InputPayload": {
                  "Finding": "{{Finding}}",
                  "parse_id_pattern": "^arn:(?:aws|aws-cn|aws-us-gov):autoscaling:(?:[a-z]{2}(?:-gov)?-[a-z]+-\\d):\\d{12}:autoScalingGroup:(?i:[0-9a-f]{11}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12}):autoScalingGroupName/(.*)$",
                  "expected_control_id": "AutoScaling.1"
                },
                "Runtime": "python3.7",
                "Handler": "parse_event",
                "Script": "#!/usr/bin/python\n###############################################################################\n#  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.         #\n#                                                                             #\n#  Licensed under the Apache License Version 2.0 (the \"License\"). You may not #\n#  use this file except in compliance with the License. A copy of the License #\n#  is located at                                                              #\n#                                                                             #\n#      http://www.apache.org/licenses/LICENSE-2.0/                            #\n#                                                                             #\n#  or in the \"license\" file accompanying this file. This file is distributed  #\n#  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, express #\n#  or implied. See the License for the specific language governing permis-    #\n#  sions and limitations under the License.                                   #\n###############################################################################\nimport re\n\ndef get_control_id_from_arn(finding_id_arn):\n    check_finding_id = re.match(\n        '^arn:(?:aws|aws-cn|aws-us-gov):securityhub:(?:[a-z]{2}(?:-gov)?-[a-z]+-\\\\d):\\\\d{12}:subscription/aws-foundational-security-best-practices/v/1\\\\.0\\\\.0/(.*)/finding/(?i:[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12})$',\n        finding_id_arn\n    )\n    if check_finding_id:\n        control_id = check_finding_id.group(1)\n        return control_id\n    else:\n        exit(f'ERROR: Finding Id is invalid: {finding_id_arn}')\n\ndef parse_event(event, context):\n    expected_control_id = event['expected_control_id']\n    parse_id_pattern = event['parse_id_pattern']\n    resource_id_matches = []\n    finding = event['Finding']\n    testmode = bool('testmode' in finding)\n\n    finding_id = finding['Id']\n        \n    account_id = finding.get('AwsAccountId', '')\n    if not re.match('^\\\\d{12}$', account_id):\n        exit(f'ERROR: AwsAccountId is invalid: {account_id}')\n\n    control_id = get_control_id_from_arn(finding['Id'])\n\n    # ControlId present and valid\n    if not control_id:\n        exit(f'ERROR: Finding Id is invalid: {finding_id} - missing Control Id')\n\n    # ControlId is the expected value\n    if control_id not in expected_control_id:\n        exit(f'ERROR: Control Id from input ({control_id}) does not match {str(expected_control_id)}')\n\n    # ProductArn present and valid\n    product_arn = finding['ProductArn']\n    if not re.match('^arn:(?:aws|aws-cn|aws-us-gov):securityhub:(?:[a-z]{2}(?:-gov)?-[a-z]+-\\\\d)::product/aws/securityhub$', product_arn):\n        exit(f'ERROR: ProductArn is invalid: {product_arn}')\n\n    resource = finding['Resources'][0]\n\n    # Details\n    details = finding['Resources'][0].get('Details', {})\n\n    # Regex match Id to get remediation-specific identifier\n    identifier_raw = finding['Resources'][0]['Id']\n    resource_id = identifier_raw\n\n    if parse_id_pattern:\n        identifier_match = re.match(\n            parse_id_pattern,\n            identifier_raw\n        )\n\n        if identifier_match:\n            for group in range(1, len(identifier_match.groups())+1):\n                resource_id_matches.append(identifier_match.group(group))\n            resource_id = identifier_match.group(event.get('resource_index', 1))\n        else:\n            exit(f'ERROR: Invalid resource Id {identifier_raw}')   \n\n    if not resource_id:\n        exit('ERROR: Resource Id is missing from the finding json Resources (Id)')\n\n    affected_object = {'Type': resource['Type'], 'Id': resource_id, 'OutputKey': 'Remediation.Output'}\n    return {\n        \"account_id\": account_id,\n        \"resource_id\": resource_id, \n        \"finding_id\": finding_id, \n        \"control_id\": control_id,\n        \"product_arn\": product_arn, \n        \"object\": affected_object,\n        \"matches\": resource_id_matches,\n        \"details\": details,\n        \"testmode\": testmode,\n        \"resource\": resource\n    }"
              },
              "isEnd": false
            },
            {
              "name": "Remediation",
              "action": "aws:executeAutomation",
              "isEnd": false,
              "inputs": {
                "DocumentName": "SHARR-EnableAutoScalingGroupELBHealthCheck",
                "RuntimeParameters": {
                  "AutomationAssumeRole": "arn:{{global:AWS_PARTITION}}:iam::{{global:ACCOUNT_ID}}:role/SO0111-EnableAutoScalingGroupELBHealthCheck",
                  "AutoScalingGroupName": "{{ParseInput.AutoScalingGroupName}}"
                }
              }
            },
            {
              "name": "UpdateFinding",
              "action": "aws:executeAwsApi",
              "inputs": {
                "Service": "securityhub",
                "Api": "BatchUpdateFindings",
                "FindingIdentifiers": [
                  {
                    "Id": "{{ParseInput.FindingId}}",
                    "ProductArn": "{{ParseInput.ProductArn}}"
                  }
                ],
                "Note": {
                  "Text": "ASG health check type updated to ELB",
                  "UpdatedBy": "SHARR-AFSBP_1.0.0_AutoScaling.1"
                },
                "Workflow": {
                  "Status": "RESOLVED"
                }
              },
              "description": "Update finding",
              "isEnd": true
            }
          ]
        },
        "DocumentType": "Automation",
        "Name": "SHARR-AFSBP_1.0.0_AutoScaling.1"
      },
      "Metadata": {
        "aws:cdk:path": "AFSBPMemberStack/AFSBP AutoScaling.1/Automation Document"
      },
      "Condition": "AFSBPAutoScaling1EnableAutoScaling1ConditionCE5EE793"
    },
    "AFSBPCloudTrail1AutomationDocumentB4BC3C6B": {
      "Type": "AWS::SSM::Document",
      "Properties": {
        "Content": {
          "description": "### Document Name - SHARR-AFSBP_1.0.0_CloudTrail.1\n## What does this document do?\nCreates a multi-region trail with KMS encryption and enables CloudTrail\nNote: this remediation will create a NEW trail.\n\n## Input Parameters\n* Finding: (Required) Security Hub finding details JSON\n* AutomationAssumeRole: (Required) The ARN of the role that allows Automation to perform the actions on your behalf.\n\n## Documentation Links\n* [AFSBP CloudTrail.1](https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-standards-fsbp-controls.html#fsbp-cloudtrail-1)\n",
          "schemaVersion": "0.3",
          "assumeRole": "{{ AutomationAssumeRole }}",
          "parameters": {
            "AutomationAssumeRole": {
              "type": "String",
              "description": "(Required) The ARN of the role that allows Automation to perform the actions on your behalf.",
              "allowedPattern": "^arn:(?:aws|aws-us-gov|aws-cn):iam::\\d{12}:role/[\\w+=,.@-]+"
            },
            "Finding": {
              "type": "StringMap",
              "description": "The input from Step function for the finding"
            },
            "KMSKeyArn": {
              "type": "String",
              "default": "{{ssm:/Solutions/SO0111/CMK_REMEDIATION_ARN}}",
              "description": "The ARN of the KMS key created by SHARR for this remediation",
              "allowedPattern": "^arn:(?:aws|aws-us-gov|aws-cn):kms:(?:[a-z]{2}(?:-gov)?-[a-z]+-\\d):\\d{12}:(?:(?:alias/[A-Za-z0-9/-_])|(?:key/(?i:[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12})))$"
            }
          },
          "outputs": [
            "Remediation.Output",
            "ParseInput.AffectedObject"
          ],
          "mainSteps": [
            {
              "name": "ParseInput",
              "action": "aws:executeScript",
              "outputs": [
                {
                  "Name": "FindingId",
                  "Selector": "$.Payload.finding_id",
                  "Type": "String"
                },
                {
                  "Name": "ProductArn",
                  "Selector": "$.Payload.product_arn",
                  "Type": "String"
                },
                {
                  "Name": "AffectedObject",
                  "Selector": "$.Payload.object",
                  "Type": "StringMap"
                }
              ],
              "inputs": {
                "InputPayload": {
                  "Finding": "{{Finding}}",
                  "region": "{{global:REGION}}",
                  "parse_id_pattern": "",
                  "expected_control_id": "CloudTrail.1"
                },
                "Runtime": "python3.7",
                "Handler": "parse_event",
                "Script": "#!/usr/bin/python\n###############################################################################\n#  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.         #\n#                                                                             #\n#  Licensed under the Apache License Version 2.0 (the \"License\"). You may not #\n#  use this file except in compliance with the License. A copy of the License #\n#  is located at                                                              #\n#                                                                             #\n#      http://www.apache.org/licenses/LICENSE-2.0/                            #\n#                                                                             #\n#  or in the \"license\" file accompanying this file. This file is distributed  #\n#  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, express #\n#  or implied. See the License for the specific language governing permis-    #\n#  sions and limitations under the License.                                   #\n###############################################################################\nimport re\n\ndef get_control_id_from_arn(finding_id_arn):\n    check_finding_id = re.match(\n        '^arn:(?:aws|aws-cn|aws-us-gov):securityhub:(?:[a-z]{2}(?:-gov)?-[a-z]+-\\\\d):\\\\d{12}:subscription/aws-foundational-security-best-practices/v/1\\\\.0\\\\.0/(.*)/finding/(?i:[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12})$',\n        finding_id_arn\n    )\n    if check_finding_id:\n        control_id = check_finding_id.group(1)\n        return control_id\n    else:\n        exit(f'ERROR: Finding Id is invalid: {finding_id_arn}')\n\ndef parse_event(event, context):\n    expected_control_id = event['expected_control_id']\n    parse_id_pattern = event['parse_id_pattern']\n    resource_id_matches = []\n    finding = event['Finding']\n    testmode = bool('testmode' in finding)\n\n    finding_id = finding['Id']\n        \n    account_id = finding.get('AwsAccountId', '')\n    if not re.match('^\\\\d{12}$', account_id):\n        exit(f'ERROR: AwsAccountId is invalid: {account_id}')\n\n    control_id = get_control_id_from_arn(finding['Id'])\n\n    # ControlId present and valid\n    if not control_id:\n        exit(f'ERROR: Finding Id is invalid: {finding_id} - missing Control Id')\n\n    # ControlId is the expected value\n    if control_id not in expected_control_id:\n        exit(f'ERROR: Control Id from input ({control_id}) does not match {str(expected_control_id)}')\n\n    # ProductArn present and valid\n    product_arn = finding['ProductArn']\n    if not re.match('^arn:(?:aws|aws-cn|aws-us-gov):securityhub:(?:[a-z]{2}(?:-gov)?-[a-z]+-\\\\d)::product/aws/securityhub$', product_arn):\n        exit(f'ERROR: ProductArn is invalid: {product_arn}')\n\n    resource = finding['Resources'][0]\n\n    # Details\n    details = finding['Resources'][0].get('Details', {})\n\n    # Regex match Id to get remediation-specific identifier\n    identifier_raw = finding['Resources'][0]['Id']\n    resource_id = identifier_raw\n\n    if parse_id_pattern:\n        identifier_match = re.match(\n            parse_id_pattern,\n            identifier_raw\n        )\n\n        if identifier_match:\n            for group in range(1, len(identifier_match.groups())+1):\n                resource_id_matches.append(identifier_match.group(group))\n            resource_id = identifier_match.group(event.get('resource_index', 1))\n        else:\n            exit(f'ERROR: Invalid resource Id {identifier_raw}')   \n\n    if not resource_id:\n        exit('ERROR: Resource Id is missing from the finding json Resources (Id)')\n\n    affected_object = {'Type': resource['Type'], 'Id': resource_id, 'OutputKey': 'Remediation.Output'}\n    return {\n        \"account_id\": account_id,\n        \"resource_id\": resource_id, \n        \"finding_id\": finding_id, \n        \"control_id\": control_id,\n        \"product_arn\": product_arn, \n        \"object\": affected_object,\n        \"matches\": resource_id_matches,\n        \"details\": details,\n        \"testmode\": testmode,\n        \"resource\": resource\n    }"
              },
              "isEnd": false
            },
            {
              "name": "Remediation",
              "action": "aws:executeAutomation",
              "isEnd": false,
              "inputs": {
                "DocumentName": "SHARR-CreateCloudTrailMultiRegionTrail",
                "RuntimeParameters": {
                  "AutomationAssumeRole": "arn:{{global:AWS_PARTITION}}:iam::{{global:ACCOUNT_ID}}:role/SO0111-CreateCloudTrailMultiRegionTrail",
                  "AWSPartition": "{{global:AWS_PARTITION}}"
                }
              }
            },
            {
              "name": "UpdateFinding",
              "action": "aws:executeAwsApi",
              "inputs": {
                "Service": "securityhub",
                "Api": "BatchUpdateFindings",
                "FindingIdentifiers": [
                  {
                    "Id": "{{ParseInput.FindingId}}",
                    "ProductArn": "{{ParseInput.ProductArn}}"
                  }
                ],
                "Note": {
                  "Text": "Multi-region, encrypted AWS CloudTrail successfully created",
                  "UpdatedBy": "SHARR-AFSBP_1.0.0_CloudTrail.1"
                },
                "Workflow": {
                  "Status": "RESOLVED"
                }
              },
              "description": "Update finding",
              "isEnd": true
            }
          ]
        },
        "DocumentType": "Automation",
        "Name": "SHARR-AFSBP_1.0.0_CloudTrail.1"
      },
      "Metadata": {
        "aws:cdk:path": "AFSBPMemberStack/AFSBP CloudTrail.1/Automation Document"
      },
      "Condition": "AFSBPCloudTrail1EnableCloudTrail1ConditionC860CCC8"
    },
    "AFSBPCloudTrail2AutomationDocument2FEFCDA3": {
      "Type": "AWS::SSM::Document",
      "Properties": {
        "Content": {
          "description": "### Document Name - SHARR-AFSBP_1.0.0_CloudTrail.2\n## What does this document do?\nThis document enables SSE KMS encryption for log files using the SHARR remediation KMS CMK\n## Input Parameters\n* Finding: (Required) Security Hub finding details JSON\n* AutomationAssumeRole: (Required) The ARN of the role that allows Automation to perform the actions on your behalf.\n## Output Parameters\n* Remediation.Output - Output from the remediation\n\n## Documentation Links\n* [AFSBP CloudTrail.2](https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-standards-fsbp-controls.html#fsbp-cloudtrail-2)\n",
          "schemaVersion": "0.3",
          "assumeRole": "{{ AutomationAssumeRole }}",
          "outputs": [
            "Remediation.Output",
            "ParseInput.AffectedObject"
          ],
          "parameters": {
            "AutomationAssumeRole": {
              "type": "String",
              "description": "(Required) The ARN of the role that allows Automation to perform the actions on your behalf.",
              "allowedPattern": "^arn:(?:aws|aws-us-gov|aws-cn):iam::\\d{12}:role/[\\w+=,.@-]+"
            },
            "Finding": {
              "type": "StringMap",
              "description": "The input from Step function for the finding"
            },
            "KMSKeyArn": {
              "type": "String",
              "default": "{{ssm:/Solutions/SO0111/CMK_REMEDIATION_ARN}}"
            }
          },
          "mainSteps": [
            {
              "name": "ParseInput",
              "action": "aws:executeScript",
              "outputs": [
                {
                  "Name": "FindingId",
                  "Selector": "$.Payload.finding_id",
                  "Type": "String"
                },
                {
                  "Name": "ProductArn",
                  "Selector": "$.Payload.product_arn",
                  "Type": "String"
                },
                {
                  "Name": "AffectedObject",
                  "Selector": "$.Payload.object",
                  "Type": "StringMap"
                },
                {
                  "Name": "TrailArn",
                  "Selector": "$.Payload.resource_id",
                  "Type": "String"
                },
                {
                  "Name": "TrailRegion",
                  "Selector": "$.Payload.resource.Region",
                  "Type": "String"
                }
              ],
              "inputs": {
                "InputPayload": {
                  "Finding": "{{Finding}}",
                  "parse_id_pattern": "",
                  "expected_control_id": "CloudTrail.2"
                },
                "Runtime": "python3.7",
                "Handler": "parse_event",
                "Script": "#!/usr/bin/python\n###############################################################################\n#  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.         #\n#                                                                             #\n#  Licensed under the Apache License Version 2.0 (the \"License\"). You may not #\n#  use this file except in compliance with the License. A copy of the License #\n#  is located at                                                              #\n#                                                                             #\n#      http://www.apache.org/licenses/LICENSE-2.0/                            #\n#                                                                             #\n#  or in the \"license\" file accompanying this file. This file is distributed  #\n#  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, express #\n#  or implied. See the License for the specific language governing permis-    #\n#  sions and limitations under the License.                                   #\n###############################################################################\nimport re\n\ndef get_control_id_from_arn(finding_id_arn):\n    check_finding_id = re.match(\n        '^arn:(?:aws|aws-cn|aws-us-gov):securityhub:(?:[a-z]{2}(?:-gov)?-[a-z]+-\\\\d):\\\\d{12}:subscription/aws-foundational-security-best-practices/v/1\\\\.0\\\\.0/(.*)/finding/(?i:[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12})$',\n        finding_id_arn\n    )\n    if check_finding_id:\n        control_id = check_finding_id.group(1)\n        return control_id\n    else:\n        exit(f'ERROR: Finding Id is invalid: {finding_id_arn}')\n\ndef parse_event(event, context):\n    expected_control_id = event['expected_control_id']\n    parse_id_pattern = event['parse_id_pattern']\n    resource_id_matches = []\n    finding = event['Finding']\n    testmode = bool('testmode' in finding)\n\n    finding_id = finding['Id']\n        \n    account_id = finding.get('AwsAccountId', '')\n    if not re.match('^\\\\d{12}$', account_id):\n        exit(f'ERROR: AwsAccountId is invalid: {account_id}')\n\n    control_id = get_control_id_from_arn(finding['Id'])\n\n    # ControlId present and valid\n    if not control_id:\n        exit(f'ERROR: Finding Id is invalid: {finding_id} - missing Control Id')\n\n    # ControlId is the expected value\n    if control_id not in expected_control_id:\n        exit(f'ERROR: Control Id from input ({control_id}) does not match {str(expected_control_id)}')\n\n    # ProductArn present and valid\n    product_arn = finding['ProductArn']\n    if not re.match('^arn:(?:aws|aws-cn|aws-us-gov):securityhub:(?:[a-z]{2}(?:-gov)?-[a-z]+-\\\\d)::product/aws/securityhub$', product_arn):\n        exit(f'ERROR: ProductArn is invalid: {product_arn}')\n\n    resource = finding['Resources'][0]\n\n    # Details\n    details = finding['Resources'][0].get('Details', {})\n\n    # Regex match Id to get remediation-specific identifier\n    identifier_raw = finding['Resources'][0]['Id']\n    resource_id = identifier_raw\n\n    if parse_id_pattern:\n        identifier_match = re.match(\n            parse_id_pattern,\n            identifier_raw\n        )\n\n        if identifier_match:\n            for group in range(1, len(identifier_match.groups())+1):\n                resource_id_matches.append(identifier_match.group(group))\n            resource_id = identifier_match.group(event.get('resource_index', 1))\n        else:\n            exit(f'ERROR: Invalid resource Id {identifier_raw}')   \n\n    if not resource_id:\n        exit('ERROR: Resource Id is missing from the finding json Resources (Id)')\n\n    affected_object = {'Type': resource['Type'], 'Id': resource_id, 'OutputKey': 'Remediation.Output'}\n    return {\n        \"account_id\": account_id,\n        \"resource_id\": resource_id, \n        \"finding_id\": finding_id, \n        \"control_id\": control_id,\n        \"product_arn\": product_arn, \n        \"object\": affected_object,\n        \"matches\": resource_id_matches,\n        \"details\": details,\n        \"testmode\": testmode,\n        \"resource\": resource\n    }"
              }
            },
            {
              "name": "Remediation",
              "action": "aws:executeAutomation",
              "inputs": {
                "DocumentName": "SHARR-EnableCloudTrailEncryption",
                "RuntimeParameters": {
                  "TrailRegion": "{{ParseInput.TrailRegion}}",
                  "TrailArn": "{{ParseInput.TrailArn}}",
                  "AutomationAssumeRole": "arn:{{global:AWS_PARTITION}}:iam::{{global:ACCOUNT_ID}}:role/SO0111-EnableCloudTrailEncryption",
                  "KMSKeyArn": "{{KMSKeyArn}}"
                }
              }
            },
            {
              "name": "UpdateFinding",
              "action": "aws:executeAwsApi",
              "inputs": {
                "Service": "securityhub",
                "Api": "BatchUpdateFindings",
                "FindingIdentifiers": [
                  {
                    "Id": "{{ParseInput.FindingId}}",
                    "ProductArn": "{{ParseInput.ProductArn}}"
                  }
                ],
                "Note": {
                  "Text": "Encryption enabled on CloudTrail",
                  "UpdatedBy": "SHARR-AFSBP_1.0.0_CloudTrail.2"
                },
                "Workflow": {
                  "Status": "RESOLVED"
                }
              },
              "description": "Update finding",
              "isEnd": true
            }
          ]
        },
        "DocumentType": "Automation",
        "Name": "SHARR-AFSBP_1.0.0_CloudTrail.2"
      },
      "Metadata": {
        "aws:cdk:path": "AFSBPMemberStack/AFSBP CloudTrail.2/Automation Document"
      },
      "Condition": "AFSBPCloudTrail2EnableCloudTrail2Condition0DA5CF58"
    },
    "AFSBPConfig1AutomationDocument77EA43B9": {
      "Type": "AWS::SSM::Document",
      "Properties": {
        "Content": {
          "description": "### Document Name - SHARR-AFSBP_1.0.0_Config.1\n## What does this document do?\nEnables AWS Config:\n* Turns on recording for all resources.\n* Creates an encrypted bucket for Config logging.\n* Creates a logging bucket for access logs for the config bucket\n* Creates an SNS topic for Config notifications\n* Creates a service-linked role\n\n## Input Parameters\n* Finding: (Required) Security Hub finding details JSON\n* AutomationAssumeRole: (Required) The ARN of the role that allows Automation to perform the actions on your behalf.\n\n## Documentation Links\n* [AFSBP Config.1](https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-standards-fsbp-controls.html#fsbp-config-1)\n",
          "schemaVersion": "0.3",
          "assumeRole": "{{ AutomationAssumeRole }}",
          "parameters": {
            "AutomationAssumeRole": {
              "type": "String",
              "description": "(Required) The ARN of the role that allows Automation to perform the actions on your behalf.",
              "allowedPattern": "^arn:(?:aws|aws-us-gov|aws-cn):iam::\\d{12}:role/[\\w+=,.@-]+"
            },
            "Finding": {
              "type": "StringMap",
              "description": "The input from the Orchestrator Step function for finding"
            },
            "KMSKeyArn": {
              "type": "String",
              "default": "{{ssm:/Solutions/SO0111/CMK_REMEDIATION_ARN}}",
              "description": "The ARN of the KMS key created by SHARR for remediations",
              "allowedPattern": "^arn:(?:aws|aws-us-gov|aws-cn):kms:(?:[a-z]{2}(?:-gov)?-[a-z]+-\\d):\\d{12}:(?:(?:alias/[A-Za-z0-9/-_])|(?:key/(?i:[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12})))$"
            }
          },
          "outputs": [
            "Remediation.Output",
            "ParseInput.AffectedObject"
          ],
          "mainSteps": [
            {
              "name": "ParseInput",
              "action": "aws:executeScript",
              "outputs": [
                {
                  "Name": "FindingId",
                  "Selector": "$.Payload.finding_id",
                  "Type": "String"
                },
                {
                  "Name": "ProductArn",
                  "Selector": "$.Payload.product_arn",
                  "Type": "String"
                },
                {
                  "Name": "AffectedObject",
                  "Selector": "$.Payload.object",
                  "Type": "StringMap"
                }
              ],
              "inputs": {
                "InputPayload": {
                  "Finding": "{{Finding}}",
                  "parse_id_pattern": "",
                  "expected_control_id": "Config.1"
                },
                "Runtime": "python3.7",
                "Handler": "parse_event",
                "Script": "#!/usr/bin/python\n###############################################################################\n#  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.         #\n#                                                                             #\n#  Licensed under the Apache License Version 2.0 (the \"License\"). You may not #\n#  use this file except in compliance with the License. A copy of the License #\n#  is located at                                                              #\n#                                                                             #\n#      http://www.apache.org/licenses/LICENSE-2.0/                            #\n#                                                                             #\n#  or in the \"license\" file accompanying this file. This file is distributed  #\n#  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, express #\n#  or implied. See the License for the specific language governing permis-    #\n#  sions and limitations under the License.                                   #\n###############################################################################\nimport re\n\ndef get_control_id_from_arn(finding_id_arn):\n    check_finding_id = re.match(\n        '^arn:(?:aws|aws-cn|aws-us-gov):securityhub:(?:[a-z]{2}(?:-gov)?-[a-z]+-\\\\d):\\\\d{12}:subscription/aws-foundational-security-best-practices/v/1\\\\.0\\\\.0/(.*)/finding/(?i:[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12})$',\n        finding_id_arn\n    )\n    if check_finding_id:\n        control_id = check_finding_id.group(1)\n        return control_id\n    else:\n        exit(f'ERROR: Finding Id is invalid: {finding_id_arn}')\n\ndef parse_event(event, context):\n    expected_control_id = event['expected_control_id']\n    parse_id_pattern = event['parse_id_pattern']\n    resource_id_matches = []\n    finding = event['Finding']\n    testmode = bool('testmode' in finding)\n\n    finding_id = finding['Id']\n        \n    account_id = finding.get('AwsAccountId', '')\n    if not re.match('^\\\\d{12}$', account_id):\n        exit(f'ERROR: AwsAccountId is invalid: {account_id}')\n\n    control_id = get_control_id_from_arn(finding['Id'])\n\n    # ControlId present and valid\n    if not control_id:\n        exit(f'ERROR: Finding Id is invalid: {finding_id} - missing Control Id')\n\n    # ControlId is the expected value\n    if control_id not in expected_control_id:\n        exit(f'ERROR: Control Id from input ({control_id}) does not match {str(expected_control_id)}')\n\n    # ProductArn present and valid\n    product_arn = finding['ProductArn']\n    if not re.match('^arn:(?:aws|aws-cn|aws-us-gov):securityhub:(?:[a-z]{2}(?:-gov)?-[a-z]+-\\\\d)::product/aws/securityhub$', product_arn):\n        exit(f'ERROR: ProductArn is invalid: {product_arn}')\n\n    resource = finding['Resources'][0]\n\n    # Details\n    details = finding['Resources'][0].get('Details', {})\n\n    # Regex match Id to get remediation-specific identifier\n    identifier_raw = finding['Resources'][0]['Id']\n    resource_id = identifier_raw\n\n    if parse_id_pattern:\n        identifier_match = re.match(\n            parse_id_pattern,\n            identifier_raw\n        )\n\n        if identifier_match:\n            for group in range(1, len(identifier_match.groups())+1):\n                resource_id_matches.append(identifier_match.group(group))\n            resource_id = identifier_match.group(event.get('resource_index', 1))\n        else:\n            exit(f'ERROR: Invalid resource Id {identifier_raw}')   \n\n    if not resource_id:\n        exit('ERROR: Resource Id is missing from the finding json Resources (Id)')\n\n    affected_object = {'Type': resource['Type'], 'Id': resource_id, 'OutputKey': 'Remediation.Output'}\n    return {\n        \"account_id\": account_id,\n        \"resource_id\": resource_id, \n        \"finding_id\": finding_id, \n        \"control_id\": control_id,\n        \"product_arn\": product_arn, \n        \"object\": affected_object,\n        \"matches\": resource_id_matches,\n        \"details\": details,\n        \"testmode\": testmode,\n        \"resource\": resource\n    }"
              },
              "isEnd": false
            },
            {
              "name": "Remediation",
              "action": "aws:executeAutomation",
              "isEnd": false,
              "inputs": {
                "DocumentName": "SHARR-EnableAWSConfig",
                "RuntimeParameters": {
                  "SNSTopicName": "SO0111-SHARR-AWSConfigNotification",
                  "KMSKeyArn": "{{KMSKeyArn}}",
                  "AutomationAssumeRole": "arn:{{global:AWS_PARTITION}}:iam::{{global:ACCOUNT_ID}}:role/SO0111-EnableAWSConfig"
                }
              }
            },
            {
              "name": "UpdateFinding",
              "action": "aws:executeAwsApi",
              "inputs": {
                "Service": "securityhub",
                "Api": "BatchUpdateFindings",
                "FindingIdentifiers": [
                  {
                    "Id": "{{ParseInput.FindingId}}",
                    "ProductArn": "{{ParseInput.ProductArn}}"
                  }
                ],
                "Note": {
                  "Text": "AWS Config enabled",
                  "UpdatedBy": "SHARR-AFSBP_1.0.0_Config.1"
                },
                "Workflow": {
                  "Status": "RESOLVED"
                }
              },
              "description": "Update finding",
              "isEnd": true
            }
          ]
        },
        "DocumentType": "Automation",
        "Name": "SHARR-AFSBP_1.0.0_Config.1"
      },
      "Metadata": {
        "aws:cdk:path": "AFSBPMemberStack/AFSBP Config.1/Automation Document"
      },
      "Condition": "AFSBPConfig1EnableConfig1Condition7EADFF11"
    },
    "AFSBPEC21AutomationDocument39E9DD5A": {
      "Type": "AWS::SSM::Document",
      "Properties": {
        "Content": {
          "description": "### Document Name - SHARR-AFSBP_1.0.0_EC2.1\n## What does this document do?\nThis document changes all public EC2 snapshots to private\n\n## Input Parameters\n* Finding: (Required) Security Hub finding details JSON\n* AutomationAssumeRole: (Required) The ARN of the role that allows Automation to perform the actions on your behalf.\n\n## Documentation Links\n* [AFSBP EC2.1](https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-standards-fsbp-controls.html#fsbp-ec2-1)\n",
          "schemaVersion": "0.3",
          "assumeRole": "{{ AutomationAssumeRole }}",
          "parameters": {
            "Finding": {
              "type": "StringMap",
              "description": "The input from Step function for EC2.1 finding"
            },
            "AutomationAssumeRole": {
              "type": "String",
              "description": "(Optional) The ARN of the role that allows Automation to perform the actions on your behalf.",
              "default": "",
              "allowedPattern": "^arn:(?:aws|aws-us-gov|aws-cn):iam::\\d{12}:role/[\\w+=,.@-]+"
            }
          },
          "outputs": [
            "Remediation.Output",
            "ParseInput.AffectedObject"
          ],
          "mainSteps": [
            {
              "name": "ParseInput",
              "action": "aws:executeScript",
              "outputs": [
                {
                  "Name": "FindingId",
                  "Selector": "$.Payload.finding_id",
                  "Type": "String"
                },
                {
                  "Name": "ProductArn",
                  "Selector": "$.Payload.product_arn",
                  "Type": "String"
                },
                {
                  "Name": "AffectedObject",
                  "Selector": "$.Payload.object",
                  "Type": "StringMap"
                },
                {
                  "Name": "AccountId",
                  "Selector": "$.Payload.account_id",
                  "Type": "String"
                },
                {
                  "Name": "TestMode",
                  "Selector": "$.Payload.testmode",
                  "Type": "Boolean"
                }
              ],
              "inputs": {
                "InputPayload": {
                  "Finding": "{{Finding}}",
                  "parse_id_pattern": "",
                  "resource_index": 2,
                  "expected_control_id": "EC2.1"
                },
                "Runtime": "python3.7",
                "Handler": "parse_event",
                "Script": "#!/usr/bin/python\n###############################################################################\n#  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.         #\n#                                                                             #\n#  Licensed under the Apache License Version 2.0 (the \"License\"). You may not #\n#  use this file except in compliance with the License. A copy of the License #\n#  is located at                                                              #\n#                                                                             #\n#      http://www.apache.org/licenses/LICENSE-2.0/                            #\n#                                                                             #\n#  or in the \"license\" file accompanying this file. This file is distributed  #\n#  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, express #\n#  or implied. See the License for the specific language governing permis-    #\n#  sions and limitations under the License.                                   #\n###############################################################################\nimport re\n\ndef get_control_id_from_arn(finding_id_arn):\n    check_finding_id = re.match(\n        '^arn:(?:aws|aws-cn|aws-us-gov):securityhub:(?:[a-z]{2}(?:-gov)?-[a-z]+-\\\\d):\\\\d{12}:subscription/aws-foundational-security-best-practices/v/1\\\\.0\\\\.0/(.*)/finding/(?i:[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12})$',\n        finding_id_arn\n    )\n    if check_finding_id:\n        control_id = check_finding_id.group(1)\n        return control_id\n    else:\n        exit(f'ERROR: Finding Id is invalid: {finding_id_arn}')\n\ndef parse_event(event, context):\n    expected_control_id = event['expected_control_id']\n    parse_id_pattern = event['parse_id_pattern']\n    resource_id_matches = []\n    finding = event['Finding']\n    testmode = bool('testmode' in finding)\n\n    finding_id = finding['Id']\n        \n    account_id = finding.get('AwsAccountId', '')\n    if not re.match('^\\\\d{12}$', account_id):\n        exit(f'ERROR: AwsAccountId is invalid: {account_id}')\n\n    control_id = get_control_id_from_arn(finding['Id'])\n\n    # ControlId present and valid\n    if not control_id:\n        exit(f'ERROR: Finding Id is invalid: {finding_id} - missing Control Id')\n\n    # ControlId is the expected value\n    if control_id not in expected_control_id:\n        exit(f'ERROR: Control Id from input ({control_id}) does not match {str(expected_control_id)}')\n\n    # ProductArn present and valid\n    product_arn = finding['ProductArn']\n    if not re.match('^arn:(?:aws|aws-cn|aws-us-gov):securityhub:(?:[a-z]{2}(?:-gov)?-[a-z]+-\\\\d)::product/aws/securityhub$', product_arn):\n        exit(f'ERROR: ProductArn is invalid: {product_arn}')\n\n    resource = finding['Resources'][0]\n\n    # Details\n    details = finding['Resources'][0].get('Details', {})\n\n    # Regex match Id to get remediation-specific identifier\n    identifier_raw = finding['Resources'][0]['Id']\n    resource_id = identifier_raw\n\n    if parse_id_pattern:\n        identifier_match = re.match(\n            parse_id_pattern,\n            identifier_raw\n        )\n\n        if identifier_match:\n            for group in range(1, len(identifier_match.groups())+1):\n                resource_id_matches.append(identifier_match.group(group))\n            resource_id = identifier_match.group(event.get('resource_index', 1))\n        else:\n            exit(f'ERROR: Invalid resource Id {identifier_raw}')   \n\n    if not resource_id:\n        exit('ERROR: Resource Id is missing from the finding json Resources (Id)')\n\n    affected_object = {'Type': resource['Type'], 'Id': resource_id, 'OutputKey': 'Remediation.Output'}\n    return {\n        \"account_id\": account_id,\n        \"resource_id\": resource_id, \n        \"finding_id\": finding_id, \n        \"control_id\": control_id,\n        \"product_arn\": product_arn, \n        \"object\": affected_object,\n        \"matches\": resource_id_matches,\n        \"details\": details,\n        \"testmode\": testmode,\n        \"resource\": resource\n    }"
              },
              "isEnd": false
            },
            {
              "name": "Remediation",
              "action": "aws:executeAutomation",
              "inputs": {
                "DocumentName": "SHARR-MakeEBSSnapshotsPrivate",
                "RuntimeParameters": {
                  "AccountId": "{{ParseInput.AccountId}}",
                  "AutomationAssumeRole": "arn:{{global:AWS_PARTITION}}:iam::{{global:ACCOUNT_ID}}:role/SO0111-MakeEBSSnapshotsPrivate",
                  "TestMode": "{{ParseInput.TestMode}}"
                }
              },
              "isEnd": false
            },
            {
              "name": "UpdateFinding",
              "action": "aws:executeAwsApi",
              "inputs": {
                "Service": "securityhub",
                "Api": "BatchUpdateFindings",
                "FindingIdentifiers": [
                  {
                    "Id": "{{ParseInput.FindingId}}",
                    "ProductArn": "{{ParseInput.ProductArn}}"
                  }
                ],
                "Note": {
                  "Text": "EBS Snapshot modified to private",
                  "UpdatedBy": "SHARR-AFSBP_1.0.0_EC2.1"
                },
                "Workflow": {
                  "Status": "RESOLVED"
                }
              },
              "description": "Update finding",
              "isEnd": true
            }
          ]
        },
        "DocumentType": "Automation",
        "Name": "SHARR-AFSBP_1.0.0_EC2.1"
      },
      "Metadata": {
        "aws:cdk:path": "AFSBPMemberStack/AFSBP EC2.1/Automation Document"
      },
      "Condition": "AFSBPEC21EnableEC21ConditionA4D0F59B"
    },
    "AFSBPEC22AutomationDocument3AD0236F": {
      "Type": "AWS::SSM::Document",
      "Properties": {
        "Content": {
          "description": "### Document Name - SHARR-AFSBP_1.0.0_EC2.2\n\n## What does this document do?\nThis document deletes ingress and egress rules from default security \ngroup using the AWS SSM Runbook AWSConfigRemediation-RemoveVPCDefaultSecurityGroupRules\n\n## Input Parameters\n* Finding: (Required) Security Hub finding details JSON\n* AutomationAssumeRole: (Required) The ARN of the role that allows Automation to perform the actions on your behalf.\n\n## Output Parameters\n* Remediation.Output - Output from AWSConfigRemediation-RemoveVPCDefaultSecurityGroupRules SSM doc\n\n## Documentation Links\n* [AFSBP EC2.2](https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-standards-fsbp-controls.html#fsbp-ec2-2)\n",
          "schemaVersion": "0.3",
          "assumeRole": "{{ AutomationAssumeRole }}",
          "outputs": [
            "Remediation.Output",
            "ParseInput.AffectedObject"
          ],
          "parameters": {
            "AutomationAssumeRole": {
              "type": "String",
              "description": "(Required) The ARN of the role that allows Automation to perform the actions on your behalf.",
              "allowedPattern": "^arn:(?:aws|aws-us-gov|aws-cn):iam::\\d{12}:role/[\\w+=,.@-]+"
            },
            "Finding": {
              "type": "StringMap",
              "description": "The input from Step function for EC2.2 finding"
            }
          },
          "mainSteps": [
            {
              "name": "ParseInput",
              "action": "aws:executeScript",
              "outputs": [
                {
                  "Name": "GroupId",
                  "Selector": "$.Payload.resource_id",
                  "Type": "String"
                },
                {
                  "Name": "FindingId",
                  "Selector": "$.Payload.finding_id",
                  "Type": "String"
                },
                {
                  "Name": "ProductArn",
                  "Selector": "$.Payload.product_arn",
                  "Type": "String"
                },
                {
                  "Name": "AffectedObject",
                  "Selector": "$.Payload.object",
                  "Type": "StringMap"
                }
              ],
              "inputs": {
                "InputPayload": {
                  "Finding": "{{Finding}}",
                  "parse_id_pattern": "^arn:(?:aws|aws-cn|aws-us-gov):ec2:(?:[a-z]{2}(?:-gov)?-[a-z]+-\\d):\\d{12}:security-group/(sg-[0-9a-f]*)$",
                  "expected_control_id": "EC2.2"
                },
                "Runtime": "python3.7",
                "Handler": "parse_event",
                "Script": "#!/usr/bin/python\n###############################################################################\n#  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.         #\n#                                                                             #\n#  Licensed under the Apache License Version 2.0 (the \"License\"). You may not #\n#  use this file except in compliance with the License. A copy of the License #\n#  is located at                                                              #\n#                                                                             #\n#      http://www.apache.org/licenses/LICENSE-2.0/                            #\n#                                                                             #\n#  or in the \"license\" file accompanying this file. This file is distributed  #\n#  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, express #\n#  or implied. See the License for the specific language governing permis-    #\n#  sions and limitations under the License.                                   #\n###############################################################################\nimport re\n\ndef get_control_id_from_arn(finding_id_arn):\n    check_finding_id = re.match(\n        '^arn:(?:aws|aws-cn|aws-us-gov):securityhub:(?:[a-z]{2}(?:-gov)?-[a-z]+-\\\\d):\\\\d{12}:subscription/aws-foundational-security-best-practices/v/1\\\\.0\\\\.0/(.*)/finding/(?i:[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12})$',\n        finding_id_arn\n    )\n    if check_finding_id:\n        control_id = check_finding_id.group(1)\n        return control_id\n    else:\n        exit(f'ERROR: Finding Id is invalid: {finding_id_arn}')\n\ndef parse_event(event, context):\n    expected_control_id = event['expected_control_id']\n    parse_id_pattern = event['parse_id_pattern']\n    resource_id_matches = []\n    finding = event['Finding']\n    testmode = bool('testmode' in finding)\n\n    finding_id = finding['Id']\n        \n    account_id = finding.get('AwsAccountId', '')\n    if not re.match('^\\\\d{12}$', account_id):\n        exit(f'ERROR: AwsAccountId is invalid: {account_id}')\n\n    control_id = get_control_id_from_arn(finding['Id'])\n\n    # ControlId present and valid\n    if not control_id:\n        exit(f'ERROR: Finding Id is invalid: {finding_id} - missing Control Id')\n\n    # ControlId is the expected value\n    if control_id not in expected_control_id:\n        exit(f'ERROR: Control Id from input ({control_id}) does not match {str(expected_control_id)}')\n\n    # ProductArn present and valid\n    product_arn = finding['ProductArn']\n    if not re.match('^arn:(?:aws|aws-cn|aws-us-gov):securityhub:(?:[a-z]{2}(?:-gov)?-[a-z]+-\\\\d)::product/aws/securityhub$', product_arn):\n        exit(f'ERROR: ProductArn is invalid: {product_arn}')\n\n    resource = finding['Resources'][0]\n\n    # Details\n    details = finding['Resources'][0].get('Details', {})\n\n    # Regex match Id to get remediation-specific identifier\n    identifier_raw = finding['Resources'][0]['Id']\n    resource_id = identifier_raw\n\n    if parse_id_pattern:\n        identifier_match = re.match(\n            parse_id_pattern,\n            identifier_raw\n        )\n\n        if identifier_match:\n            for group in range(1, len(identifier_match.groups())+1):\n                resource_id_matches.append(identifier_match.group(group))\n            resource_id = identifier_match.group(event.get('resource_index', 1))\n        else:\n            exit(f'ERROR: Invalid resource Id {identifier_raw}')   \n\n    if not resource_id:\n        exit('ERROR: Resource Id is missing from the finding json Resources (Id)')\n\n    affected_object = {'Type': resource['Type'], 'Id': resource_id, 'OutputKey': 'Remediation.Output'}\n    return {\n        \"account_id\": account_id,\n        \"resource_id\": resource_id, \n        \"finding_id\": finding_id, \n        \"control_id\": control_id,\n        \"product_arn\": product_arn, \n        \"object\": affected_object,\n        \"matches\": resource_id_matches,\n        \"details\": details,\n        \"testmode\": testmode,\n        \"resource\": resource\n    }"
              },
              "isEnd": false
            },
            {
              "name": "Remediation",
              "action": "aws:executeAutomation",
              "isEnd": false,
              "inputs": {
                "DocumentName": "SHARR-RemoveVPCDefaultSecurityGroupRules",
                "RuntimeParameters": {
                  "GroupId": "{{ParseInput.GroupId}}",
                  "AutomationAssumeRole": "arn:{{global:AWS_PARTITION}}:iam::{{global:ACCOUNT_ID}}:role/SO0111-RemoveVPCDefaultSecurityGroupRules"
                }
              }
            },
            {
              "name": "UpdateFinding",
              "action": "aws:executeAwsApi",
              "inputs": {
                "Service": "securityhub",
                "Api": "BatchUpdateFindings",
                "FindingIdentifiers": [
                  {
                    "Id": "{{ParseInput.FindingId}}",
                    "ProductArn": "{{ParseInput.ProductArn}}"
                  }
                ],
                "Note": {
                  "Text": "Removed rules on default security group",
                  "UpdatedBy": "SHARR-AFSBP_1.0.0_EC2.2"
                },
                "Workflow": {
                  "Status": "RESOLVED"
                }
              },
              "description": "Update finding",
              "isEnd": true
            }
          ]
        },
        "DocumentType": "Automation",
        "Name": "SHARR-AFSBP_1.0.0_EC2.2"
      },
      "Metadata": {
        "aws:cdk:path": "AFSBPMemberStack/AFSBP EC2.2/Automation Document"
      },
      "Condition": "AFSBPEC22EnableEC22Condition2349855D"
    },
    "AFSBPEC26AutomationDocumentA0710E01": {
      "Type": "AWS::SSM::Document",
      "Properties": {
        "Content": {
          "description": "### Document Name - SHARR-AFSBP_1.0.0_EC2.6\n\n## What does this document do?\nEnables VPC Flow Logs for a VPC\n\n## Input Parameters\n* Finding: (Required) Security Hub finding details JSON\n* AutomationAssumeRole: (Required) The ARN of the role that allows Automation to perform the actions on your behalf.\n\n## Output Parameters\n* Remediation.Output - Remediation results\n\n## Documentation Links\n* [AFSBP EC2.6](https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-standards-fsbp-controls.html#fsbp-ec2-6)\n",
          "schemaVersion": "0.3",
          "assumeRole": "{{ AutomationAssumeRole }}",
          "outputs": [
            "ParseInput.AffectedObject",
            "Remediation.Output"
          ],
          "parameters": {
            "Finding": {
              "type": "StringMap",
              "description": "The input from Step function for ASG1 finding"
            },
            "AutomationAssumeRole": {
              "type": "String",
              "description": "(Optional) The ARN of the role that allows Automation to perform the actions on your behalf.",
              "default": "",
              "allowedPattern": "^arn:(?:aws|aws-us-gov|aws-cn):iam::\\d{12}:role/[\\w+=,.@-]+"
            }
          },
          "mainSteps": [
            {
              "name": "ParseInput",
              "action": "aws:executeScript",
              "outputs": [
                {
                  "Name": "VPC",
                  "Selector": "$.Payload.resource_id",
                  "Type": "String"
                },
                {
                  "Name": "FindingId",
                  "Selector": "$.Payload.finding_id",
                  "Type": "String"
                },
                {
                  "Name": "ProductArn",
                  "Selector": "$.Payload.product_arn",
                  "Type": "String"
                },
                {
                  "Name": "AffectedObject",
                  "Selector": "$.Payload.object",
                  "Type": "StringMap"
                }
              ],
              "inputs": {
                "InputPayload": {
                  "Finding": "{{Finding}}",
                  "parse_id_pattern": "^arn:(?:aws|aws-cn|aws-us-gov):ec2:.*:\\d{12}:vpc/(vpc-[0-9a-f]{8,17})$",
                  "expected_control_id": "EC2.6"
                },
                "Runtime": "python3.7",
                "Handler": "parse_event",
                "Script": "#!/usr/bin/python\n###############################################################################\n#  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.         #\n#                                                                             #\n#  Licensed under the Apache License Version 2.0 (the \"License\"). You may not #\n#  use this file except in compliance with the License. A copy of the License #\n#  is located at                                                              #\n#                                                                             #\n#      http://www.apache.org/licenses/LICENSE-2.0/                            #\n#                                                                             #\n#  or in the \"license\" file accompanying this file. This file is distributed  #\n#  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, express #\n#  or implied. See the License for the specific language governing permis-    #\n#  sions and limitations under the License.                                   #\n###############################################################################\nimport re\n\ndef get_control_id_from_arn(finding_id_arn):\n    check_finding_id = re.match(\n        '^arn:(?:aws|aws-cn|aws-us-gov):securityhub:(?:[a-z]{2}(?:-gov)?-[a-z]+-\\\\d):\\\\d{12}:subscription/aws-foundational-security-best-practices/v/1\\\\.0\\\\.0/(.*)/finding/(?i:[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12})$',\n        finding_id_arn\n    )\n    if check_finding_id:\n        control_id = check_finding_id.group(1)\n        return control_id\n    else:\n        exit(f'ERROR: Finding Id is invalid: {finding_id_arn}')\n\ndef parse_event(event, context):\n    expected_control_id = event['expected_control_id']\n    parse_id_pattern = event['parse_id_pattern']\n    resource_id_matches = []\n    finding = event['Finding']\n    testmode = bool('testmode' in finding)\n\n    finding_id = finding['Id']\n        \n    account_id = finding.get('AwsAccountId', '')\n    if not re.match('^\\\\d{12}$', account_id):\n        exit(f'ERROR: AwsAccountId is invalid: {account_id}')\n\n    control_id = get_control_id_from_arn(finding['Id'])\n\n    # ControlId present and valid\n    if not control_id:\n        exit(f'ERROR: Finding Id is invalid: {finding_id} - missing Control Id')\n\n    # ControlId is the expected value\n    if control_id not in expected_control_id:\n        exit(f'ERROR: Control Id from input ({control_id}) does not match {str(expected_control_id)}')\n\n    # ProductArn present and valid\n    product_arn = finding['ProductArn']\n    if not re.match('^arn:(?:aws|aws-cn|aws-us-gov):securityhub:(?:[a-z]{2}(?:-gov)?-[a-z]+-\\\\d)::product/aws/securityhub$', product_arn):\n        exit(f'ERROR: ProductArn is invalid: {product_arn}')\n\n    resource = finding['Resources'][0]\n\n    # Details\n    details = finding['Resources'][0].get('Details', {})\n\n    # Regex match Id to get remediation-specific identifier\n    identifier_raw = finding['Resources'][0]['Id']\n    resource_id = identifier_raw\n\n    if parse_id_pattern:\n        identifier_match = re.match(\n            parse_id_pattern,\n            identifier_raw\n        )\n\n        if identifier_match:\n            for group in range(1, len(identifier_match.groups())+1):\n                resource_id_matches.append(identifier_match.group(group))\n            resource_id = identifier_match.group(event.get('resource_index', 1))\n        else:\n            exit(f'ERROR: Invalid resource Id {identifier_raw}')   \n\n    if not resource_id:\n        exit('ERROR: Resource Id is missing from the finding json Resources (Id)')\n\n    affected_object = {'Type': resource['Type'], 'Id': resource_id, 'OutputKey': 'Remediation.Output'}\n    return {\n        \"account_id\": account_id,\n        \"resource_id\": resource_id, \n        \"finding_id\": finding_id, \n        \"control_id\": control_id,\n        \"product_arn\": product_arn, \n        \"object\": affected_object,\n        \"matches\": resource_id_matches,\n        \"details\": details,\n        \"testmode\": testmode,\n        \"resource\": resource\n    }"
              },
              "isEnd": false
            },
            {
              "name": "Remediation",
              "action": "aws:executeAutomation",
              "isEnd": false,
              "inputs": {
                "DocumentName": "SHARR-EnableVPCFlowLogs",
                "RuntimeParameters": {
                  "VPC": "{{ParseInput.VPC}}",
                  "RemediationRole": "arn:{{global:AWS_PARTITION}}:iam::{{global:ACCOUNT_ID}}:role/SO0111-EnableVPCFlowLogs-remediationRole",
                  "AutomationAssumeRole": "arn:{{global:AWS_PARTITION}}:iam::{{global:ACCOUNT_ID}}:role/SO0111-EnableVPCFlowLogs"
                }
              }
            },
            {
              "name": "UpdateFinding",
              "action": "aws:executeAwsApi",
              "inputs": {
                "Service": "securityhub",
                "Api": "BatchUpdateFindings",
                "FindingIdentifiers": [
                  {
                    "Id": "{{ParseInput.FindingId}}",
                    "ProductArn": "{{ParseInput.ProductArn}}"
                  }
                ],
                "Note": {
                  "Text": "Enabled VPC Flow Logs for {{ParseInput.VPC}}",
                  "UpdatedBy": "SHARR-AFSBP_1.0.0_EC2.6"
                },
                "Workflow": {
                  "Status": "RESOLVED"
                }
              },
              "description": "Update finding",
              "isEnd": true
            }
          ]
        },
        "DocumentType": "Automation",
        "Name": "SHARR-AFSBP_1.0.0_EC2.6"
      },
      "Metadata": {
        "aws:cdk:path": "AFSBPMemberStack/AFSBP EC2.6/Automation Document"
      },
      "Condition": "AFSBPEC26EnableEC26Condition4F53E96A"
    },
    "AFSBPEC27AutomationDocument2B9BDB9C": {
      "Type": "AWS::SSM::Document",
      "Properties": {
        "Content": {
          "description": "### Document Name - SHARR-AFSBP_1.0.0_EC2.7\n## What does this document do?\nThis document enables `EBS Encryption by default` for an AWS account in the current region by calling another SSM document\n## Input Parameters\n* Finding: (Required) Security Hub finding details JSON\n* AutomationAssumeRole: (Required) The ARN of the role that allows Automation to perform the actions on your behalf.\n## Output Parameters\n* Remediation.Output\n\n## Documentation Links\n* [AFSBP EC2.7](https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-standards-fsbp-controls.html#fsbp-ec2-7)\n",
          "schemaVersion": "0.3",
          "assumeRole": "{{ AutomationAssumeRole }}",
          "parameters": {
            "AutomationAssumeRole": {
              "type": "String",
              "description": "(Required) The ARN of the role that allows Automation to perform the actions on your behalf.",
              "allowedPattern": "^arn:(?:aws|aws-us-gov|aws-cn):iam::\\d{12}:role/[\\w+=,.@-]+"
            },
            "Finding": {
              "type": "StringMap",
              "description": "The input from Step function for RDS7 finding"
            }
          },
          "outputs": [
            "ExecRemediation.Output",
            "ParseInput.AffectedObject"
          ],
          "mainSteps": [
            {
              "name": "ParseInput",
              "action": "aws:executeScript",
              "outputs": [
                {
                  "Name": "FindingId",
                  "Selector": "$.Payload.finding_id",
                  "Type": "String"
                },
                {
                  "Name": "ProductArn",
                  "Selector": "$.Payload.product_arn",
                  "Type": "String"
                },
                {
                  "Name": "AffectedObject",
                  "Selector": "$.Payload.object",
                  "Type": "StringMap"
                }
              ],
              "inputs": {
                "InputPayload": {
                  "Finding": "{{Finding}}",
                  "parse_id_pattern": "",
                  "expected_control_id": "EC2.7"
                },
                "Runtime": "python3.7",
                "Handler": "parse_event",
                "Script": "#!/usr/bin/python\n###############################################################################\n#  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.         #\n#                                                                             #\n#  Licensed under the Apache License Version 2.0 (the \"License\"). You may not #\n#  use this file except in compliance with the License. A copy of the License #\n#  is located at                                                              #\n#                                                                             #\n#      http://www.apache.org/licenses/LICENSE-2.0/                            #\n#                                                                             #\n#  or in the \"license\" file accompanying this file. This file is distributed  #\n#  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, express #\n#  or implied. See the License for the specific language governing permis-    #\n#  sions and limitations under the License.                                   #\n###############################################################################\nimport re\n\ndef get_control_id_from_arn(finding_id_arn):\n    check_finding_id = re.match(\n        '^arn:(?:aws|aws-cn|aws-us-gov):securityhub:(?:[a-z]{2}(?:-gov)?-[a-z]+-\\\\d):\\\\d{12}:subscription/aws-foundational-security-best-practices/v/1\\\\.0\\\\.0/(.*)/finding/(?i:[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12})$',\n        finding_id_arn\n    )\n    if check_finding_id:\n        control_id = check_finding_id.group(1)\n        return control_id\n    else:\n        exit(f'ERROR: Finding Id is invalid: {finding_id_arn}')\n\ndef parse_event(event, context):\n    expected_control_id = event['expected_control_id']\n    parse_id_pattern = event['parse_id_pattern']\n    resource_id_matches = []\n    finding = event['Finding']\n    testmode = bool('testmode' in finding)\n\n    finding_id = finding['Id']\n        \n    account_id = finding.get('AwsAccountId', '')\n    if not re.match('^\\\\d{12}$', account_id):\n        exit(f'ERROR: AwsAccountId is invalid: {account_id}')\n\n    control_id = get_control_id_from_arn(finding['Id'])\n\n    # ControlId present and valid\n    if not control_id:\n        exit(f'ERROR: Finding Id is invalid: {finding_id} - missing Control Id')\n\n    # ControlId is the expected value\n    if control_id not in expected_control_id:\n        exit(f'ERROR: Control Id from input ({control_id}) does not match {str(expected_control_id)}')\n\n    # ProductArn present and valid\n    product_arn = finding['ProductArn']\n    if not re.match('^arn:(?:aws|aws-cn|aws-us-gov):securityhub:(?:[a-z]{2}(?:-gov)?-[a-z]+-\\\\d)::product/aws/securityhub$', product_arn):\n        exit(f'ERROR: ProductArn is invalid: {product_arn}')\n\n    resource = finding['Resources'][0]\n\n    # Details\n    details = finding['Resources'][0].get('Details', {})\n\n    # Regex match Id to get remediation-specific identifier\n    identifier_raw = finding['Resources'][0]['Id']\n    resource_id = identifier_raw\n\n    if parse_id_pattern:\n        identifier_match = re.match(\n            parse_id_pattern,\n            identifier_raw\n        )\n\n        if identifier_match:\n            for group in range(1, len(identifier_match.groups())+1):\n                resource_id_matches.append(identifier_match.group(group))\n            resource_id = identifier_match.group(event.get('resource_index', 1))\n        else:\n            exit(f'ERROR: Invalid resource Id {identifier_raw}')   \n\n    if not resource_id:\n        exit('ERROR: Resource Id is missing from the finding json Resources (Id)')\n\n    affected_object = {'Type': resource['Type'], 'Id': resource_id, 'OutputKey': 'Remediation.Output'}\n    return {\n        \"account_id\": account_id,\n        \"resource_id\": resource_id, \n        \"finding_id\": finding_id, \n        \"control_id\": control_id,\n        \"product_arn\": product_arn, \n        \"object\": affected_object,\n        \"matches\": resource_id_matches,\n        \"details\": details,\n        \"testmode\": testmode,\n        \"resource\": resource\n    }"
              },
              "isEnd": false
            },
            {
              "name": "ExecRemediation",
              "action": "aws:executeAutomation",
              "isEnd": false,
              "inputs": {
                "DocumentName": "SHARR-EnableEbsEncryptionByDefault",
                "RuntimeParameters": {
                  "AutomationAssumeRole": "arn:{{global:AWS_PARTITION}}:iam::{{global:ACCOUNT_ID}}:role/SO0111-EnableEbsEncryptionByDefault"
                }
              }
            },
            {
              "name": "UpdateFinding",
              "action": "aws:executeAwsApi",
              "inputs": {
                "Service": "securityhub",
                "Api": "BatchUpdateFindings",
                "FindingIdentifiers": [
                  {
                    "Id": "{{ParseInput.FindingId}}",
                    "ProductArn": "{{ParseInput.ProductArn}}"
                  }
                ],
                "Note": {
                  "Text": "Enabled EBS encryption by default",
                  "UpdatedBy": "SHARR-AFSBP_1.0.0_EC2.7"
                },
                "Workflow": {
                  "Status": "RESOLVED"
                }
              },
              "description": "Update finding",
              "isEnd": true
            }
          ]
        },
        "DocumentType": "Automation",
        "Name": "SHARR-AFSBP_1.0.0_EC2.7"
      },
      "Metadata": {
        "aws:cdk:path": "AFSBPMemberStack/AFSBP EC2.7/Automation Document"
      },
      "Condition": "AFSBPEC27EnableEC27ConditionFC2F394C"
    },
    "AFSBPIAM7AutomationDocument30C0FB77": {
      "Type": "AWS::SSM::Document",
      "Properties": {
        "Content": {
          "description": "### Document Name - SHARR-AFSBP_1.0.0_IAM.7\n\n## What does this document do?\nThis document establishes a default password policy.\n\n## Security Standards and Controls\n* AFSBP IAM.7\n\n## Input Parameters\n* Finding: (Required) Security Hub finding details JSON\n* AutomationAssumeRole: (Required) The ARN of the role that allows Automation to perform the actions on your behalf.\n## Output Parameters\n* Remediation.Output\n\n## Documentation Links\n* [AFSBP IAM.7](https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-standards-fsbp-controls.html#fsbp-iam-7)\n",
          "schemaVersion": "0.3",
          "assumeRole": "{{ AutomationAssumeRole }}",
          "outputs": [
            "ParseInput.AffectedObject",
            "Remediation.Output"
          ],
          "parameters": {
            "Finding": {
              "type": "StringMap",
              "description": "The input from Step function for finding"
            },
            "AutomationAssumeRole": {
              "type": "String",
              "description": "(Optional) The ARN of the role that allows Automation to perform the actions on your behalf.",
              "default": "",
              "allowedPattern": "^arn:(?:aws|aws-us-gov|aws-cn):iam::\\d{12}:role/[\\w+=,.@-]+"
            }
          },
          "mainSteps": [
            {
              "name": "ParseInput",
              "action": "aws:executeScript",
              "outputs": [
                {
                  "Name": "FindingId",
                  "Selector": "$.Payload.finding_id",
                  "Type": "String"
                },
                {
                  "Name": "ProductArn",
                  "Selector": "$.Payload.product_arn",
                  "Type": "String"
                },
                {
                  "Name": "AffectedObject",
                  "Selector": "$.Payload.object",
                  "Type": "StringMap"
                }
              ],
              "inputs": {
                "InputPayload": {
                  "Finding": "{{Finding}}",
                  "parse_id_pattern": "",
                  "expected_control_id": [
                    "IAM.7"
                  ]
                },
                "Runtime": "python3.7",
                "Handler": "parse_event",
                "Script": "#!/usr/bin/python\n###############################################################################\n#  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.         #\n#                                                                             #\n#  Licensed under the Apache License Version 2.0 (the \"License\"). You may not #\n#  use this file except in compliance with the License. A copy of the License #\n#  is located at                                                              #\n#                                                                             #\n#      http://www.apache.org/licenses/LICENSE-2.0/                            #\n#                                                                             #\n#  or in the \"license\" file accompanying this file. This file is distributed  #\n#  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, express #\n#  or implied. See the License for the specific language governing permis-    #\n#  sions and limitations under the License.                                   #\n###############################################################################\nimport re\n\ndef get_control_id_from_arn(finding_id_arn):\n    check_finding_id = re.match(\n        '^arn:(?:aws|aws-cn|aws-us-gov):securityhub:(?:[a-z]{2}(?:-gov)?-[a-z]+-\\\\d):\\\\d{12}:subscription/aws-foundational-security-best-practices/v/1\\\\.0\\\\.0/(.*)/finding/(?i:[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12})$',\n        finding_id_arn\n    )\n    if check_finding_id:\n        control_id = check_finding_id.group(1)\n        return control_id\n    else:\n        exit(f'ERROR: Finding Id is invalid: {finding_id_arn}')\n\ndef parse_event(event, context):\n    expected_control_id = event['expected_control_id']\n    parse_id_pattern = event['parse_id_pattern']\n    resource_id_matches = []\n    finding = event['Finding']\n    testmode = bool('testmode' in finding)\n\n    finding_id = finding['Id']\n        \n    account_id = finding.get('AwsAccountId', '')\n    if not re.match('^\\\\d{12}$', account_id):\n        exit(f'ERROR: AwsAccountId is invalid: {account_id}')\n\n    control_id = get_control_id_from_arn(finding['Id'])\n\n    # ControlId present and valid\n    if not control_id:\n        exit(f'ERROR: Finding Id is invalid: {finding_id} - missing Control Id')\n\n    # ControlId is the expected value\n    if control_id not in expected_control_id:\n        exit(f'ERROR: Control Id from input ({control_id}) does not match {str(expected_control_id)}')\n\n    # ProductArn present and valid\n    product_arn = finding['ProductArn']\n    if not re.match('^arn:(?:aws|aws-cn|aws-us-gov):securityhub:(?:[a-z]{2}(?:-gov)?-[a-z]+-\\\\d)::product/aws/securityhub$', product_arn):\n        exit(f'ERROR: ProductArn is invalid: {product_arn}')\n\n    resource = finding['Resources'][0]\n\n    # Details\n    details = finding['Resources'][0].get('Details', {})\n\n    # Regex match Id to get remediation-specific identifier\n    identifier_raw = finding['Resources'][0]['Id']\n    resource_id = identifier_raw\n\n    if parse_id_pattern:\n        identifier_match = re.match(\n            parse_id_pattern,\n            identifier_raw\n        )\n\n        if identifier_match:\n            for group in range(1, len(identifier_match.groups())+1):\n                resource_id_matches.append(identifier_match.group(group))\n            resource_id = identifier_match.group(event.get('resource_index', 1))\n        else:\n            exit(f'ERROR: Invalid resource Id {identifier_raw}')   \n\n    if not resource_id:\n        exit('ERROR: Resource Id is missing from the finding json Resources (Id)')\n\n    affected_object = {'Type': resource['Type'], 'Id': resource_id, 'OutputKey': 'Remediation.Output'}\n    return {\n        \"account_id\": account_id,\n        \"resource_id\": resource_id, \n        \"finding_id\": finding_id, \n        \"control_id\": control_id,\n        \"product_arn\": product_arn, \n        \"object\": affected_object,\n        \"matches\": resource_id_matches,\n        \"details\": details,\n        \"testmode\": testmode,\n        \"resource\": resource\n    }"
              },
              "isEnd": false
            },
            {
              "name": "Remediation",
              "action": "aws:executeAutomation",
              "isEnd": false,
              "inputs": {
                "DocumentName": "SHARR-SetIAMPasswordPolicy",
                "RuntimeParameters": {
                  "AllowUsersToChangePassword": true,
                  "HardExpiry": true,
                  "MaxPasswordAge": 90,
                  "MinimumPasswordLength": 14,
                  "RequireSymbols": true,
                  "RequireNumbers": true,
                  "RequireUppercaseCharacters": true,
                  "RequireLowercaseCharacters": true,
                  "PasswordReusePrevention": 24,
                  "AutomationAssumeRole": "arn:{{global:AWS_PARTITION}}:iam::{{global:ACCOUNT_ID}}:role/SO0111-SetIAMPasswordPolicy"
                }
              }
            },
            {
              "name": "UpdateFinding",
              "action": "aws:executeAwsApi",
              "inputs": {
                "Service": "securityhub",
                "Api": "BatchUpdateFindings",
                "FindingIdentifiers": [
                  {
                    "Id": "{{ParseInput.FindingId}}",
                    "ProductArn": "{{ParseInput.ProductArn}}"
                  }
                ],
                "Note": {
                  "Text": "Established a baseline password policy using the AWSConfigRemediation-SetIAMPasswordPolicy runbook.",
                  "UpdatedBy": "SHARR-AFSBP_1.0.0_IAM.7"
                },
                "Workflow": {
                  "Status": "RESOLVED"
                }
              },
              "description": "Update finding",
              "isEnd": true
            }
          ]
        },
        "DocumentType": "Automation",
        "Name": "SHARR-AFSBP_1.0.0_IAM.7"
      },
      "Metadata": {
        "aws:cdk:path": "AFSBPMemberStack/AFSBP IAM.7/Automation Document"
      },
      "Condition": "AFSBPIAM7EnableIAM7Condition9B59FBA4"
    },
    "AFSBPIAM8AutomationDocumentE62407D1": {
      "Type": "AWS::SSM::Document",
      "Properties": {
        "Content": {
          "description": "### Document Name - SHARR-AFSBP_1.0.0_IAM.8\n\n## What does this document do?\nThis document ensures that credentials unused for 90 days or greater are disabled.\n\n## Input Parameters\n* Finding: (Required) Security Hub finding details JSON\n* AutomationAssumeRole: (Required) The ARN of the role that allows Automation to perform the actions on your behalf.\n\n## Output Parameters\n* Remediation.Output - Output of remediation runbook\n\nSEE AWSConfigRemediation-RevokeUnusedIAMUserCredentials\n\n## Documentation Links\n* [AFSBP IAM.8](https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-standards-fsbp-controls.html#fsbp-iam-8)\n",
          "schemaVersion": "0.3",
          "assumeRole": "{{ AutomationAssumeRole }}",
          "outputs": [
            "ParseInput.AffectedObject",
            "Remediation.Output"
          ],
          "parameters": {
            "Finding": {
              "type": "StringMap",
              "description": "The input from Step function for ASG1 finding"
            },
            "AutomationAssumeRole": {
              "type": "String",
              "description": "(Optional) The ARN of the role that allows Automation to perform the actions on your behalf.",
              "default": "",
              "allowedPattern": "^arn:(?:aws|aws-us-gov|aws-cn):iam::\\d{12}:role/[\\w+=,.@-]+"
            }
          },
          "mainSteps": [
            {
              "name": "ParseInput",
              "action": "aws:executeScript",
              "outputs": [
                {
                  "Name": "IAMResourceId",
                  "Selector": "$.Payload.details.AwsIamUser.UserId",
                  "Type": "String"
                },
                {
                  "Name": "FindingId",
                  "Selector": "$.Payload.finding_id",
                  "Type": "String"
                },
                {
                  "Name": "ProductArn",
                  "Selector": "$.Payload.product_arn",
                  "Type": "String"
                },
                {
                  "Name": "AffectedObject",
                  "Selector": "$.Payload.object",
                  "Type": "StringMap"
                }
              ],
              "inputs": {
                "InputPayload": {
                  "Finding": "{{Finding}}",
                  "parse_id_pattern": "",
                  "expected_control_id": "IAM.8"
                },
                "Runtime": "python3.7",
                "Handler": "parse_event",
                "Script": "#!/usr/bin/python\n###############################################################################\n#  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.         #\n#                                                                             #\n#  Licensed under the Apache License Version 2.0 (the \"License\"). You may not #\n#  use this file except in compliance with the License. A copy of the License #\n#  is located at                                                              #\n#                                                                             #\n#      http://www.apache.org/licenses/LICENSE-2.0/                            #\n#                                                                             #\n#  or in the \"license\" file accompanying this file. This file is distributed  #\n#  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, express #\n#  or implied. See the License for the specific language governing permis-    #\n#  sions and limitations under the License.                                   #\n###############################################################################\nimport re\n\ndef get_control_id_from_arn(finding_id_arn):\n    check_finding_id = re.match(\n        '^arn:(?:aws|aws-cn|aws-us-gov):securityhub:(?:[a-z]{2}(?:-gov)?-[a-z]+-\\\\d):\\\\d{12}:subscription/aws-foundational-security-best-practices/v/1\\\\.0\\\\.0/(.*)/finding/(?i:[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12})$',\n        finding_id_arn\n    )\n    if check_finding_id:\n        control_id = check_finding_id.group(1)\n        return control_id\n    else:\n        exit(f'ERROR: Finding Id is invalid: {finding_id_arn}')\n\ndef parse_event(event, context):\n    expected_control_id = event['expected_control_id']\n    parse_id_pattern = event['parse_id_pattern']\n    resource_id_matches = []\n    finding = event['Finding']\n    testmode = bool('testmode' in finding)\n\n    finding_id = finding['Id']\n        \n    account_id = finding.get('AwsAccountId', '')\n    if not re.match('^\\\\d{12}$', account_id):\n        exit(f'ERROR: AwsAccountId is invalid: {account_id}')\n\n    control_id = get_control_id_from_arn(finding['Id'])\n\n    # ControlId present and valid\n    if not control_id:\n        exit(f'ERROR: Finding Id is invalid: {finding_id} - missing Control Id')\n\n    # ControlId is the expected value\n    if control_id not in expected_control_id:\n        exit(f'ERROR: Control Id from input ({control_id}) does not match {str(expected_control_id)}')\n\n    # ProductArn present and valid\n    product_arn = finding['ProductArn']\n    if not re.match('^arn:(?:aws|aws-cn|aws-us-gov):securityhub:(?:[a-z]{2}(?:-gov)?-[a-z]+-\\\\d)::product/aws/securityhub$', product_arn):\n        exit(f'ERROR: ProductArn is invalid: {product_arn}')\n\n    resource = finding['Resources'][0]\n\n    # Details\n    details = finding['Resources'][0].get('Details', {})\n\n    # Regex match Id to get remediation-specific identifier\n    identifier_raw = finding['Resources'][0]['Id']\n    resource_id = identifier_raw\n\n    if parse_id_pattern:\n        identifier_match = re.match(\n            parse_id_pattern,\n            identifier_raw\n        )\n\n        if identifier_match:\n            for group in range(1, len(identifier_match.groups())+1):\n                resource_id_matches.append(identifier_match.group(group))\n            resource_id = identifier_match.group(event.get('resource_index', 1))\n        else:\n            exit(f'ERROR: Invalid resource Id {identifier_raw}')   \n\n    if not resource_id:\n        exit('ERROR: Resource Id is missing from the finding json Resources (Id)')\n\n    affected_object = {'Type': resource['Type'], 'Id': resource_id, 'OutputKey': 'Remediation.Output'}\n    return {\n        \"account_id\": account_id,\n        \"resource_id\": resource_id, \n        \"finding_id\": finding_id, \n        \"control_id\": control_id,\n        \"product_arn\": product_arn, \n        \"object\": affected_object,\n        \"matches\": resource_id_matches,\n        \"details\": details,\n        \"testmode\": testmode,\n        \"resource\": resource\n    }"
              },
              "isEnd": false
            },
            {
              "name": "Remediation",
              "action": "aws:executeAutomation",
              "isEnd": false,
              "inputs": {
                "DocumentName": "SHARR-RevokeUnusedIAMUserCredentials",
                "RuntimeParameters": {
                  "IAMResourceId": "{{ ParseInput.IAMResourceId }}",
                  "AutomationAssumeRole": "arn:{{global:AWS_PARTITION}}:iam::{{global:ACCOUNT_ID}}:role/SO0111-RevokeUnusedIAMUserCredentials"
                }
              }
            },
            {
              "name": "UpdateFinding",
              "action": "aws:executeAwsApi",
              "inputs": {
                "Service": "securityhub",
                "Api": "BatchUpdateFindings",
                "FindingIdentifiers": [
                  {
                    "Id": "{{ParseInput.FindingId}}",
                    "ProductArn": "{{ParseInput.ProductArn}}"
                  }
                ],
                "Note": {
                  "Text": "Deactivated unused keys and expired logins using the AWSConfigRemediation-RevokeUnusedIAMUserCredentials runbook.",
                  "UpdatedBy": "SHARR-AFSBP_1.0.0_IAM.8"
                },
                "Workflow": {
                  "Status": "RESOLVED"
                }
              },
              "description": "Update finding",
              "isEnd": true
            }
          ]
        },
        "DocumentType": "Automation",
        "Name": "SHARR-AFSBP_1.0.0_IAM.8"
      },
      "Metadata": {
        "aws:cdk:path": "AFSBPMemberStack/AFSBP IAM.8/Automation Document"
      },
      "Condition": "AFSBPIAM8EnableIAM8Condition41C0E0BC"
    },
    "AFSBPLambda1AutomationDocumentB7954EC2": {
      "Type": "AWS::SSM::Document",
      "Properties": {
        "Content": {
          "description": "### Document Name - SHARR-AFSBP_1.0.0_Lambda.1 \n\n## What does this document do?\nThis document removes the public resource policy. A public resource policy\ncontains a principal \"*\" or AWS: \"*\", which allows public access to the \nfunction. The remediation is to remove the SID of the public policy.\n\n## Input Parameters\n* Finding: (Required) Security Hub finding details JSON\n* AutomationAssumeRole: (Required) The ARN of the role that allows Automation to perform the actions on your behalf.\n\n## Documentation Links\n* [AFSBP Lambda.1](https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-standards-fsbp-controls.html#fsbp-lambda-1)\n",
          "schemaVersion": "0.3",
          "assumeRole": "{{ AutomationAssumeRole }}",
          "outputs": [
            "Remediation.Output",
            "ParseInput.AffectedObject"
          ],
          "parameters": {
            "Finding": {
              "type": "StringMap",
              "description": "The input from Step function for the finding"
            },
            "AutomationAssumeRole": {
              "type": "String",
              "description": "The ARN of the role that allows Automation to perform the actions on your behalf.",
              "default": "",
              "allowedPattern": "^arn:(?:aws|aws-us-gov|aws-cn):iam::\\d{12}:role/[\\w+=,.@-]+"
            }
          },
          "mainSteps": [
            {
              "name": "ParseInput",
              "action": "aws:executeScript",
              "outputs": [
                {
                  "Name": "FindingId",
                  "Selector": "$.Payload.finding_id",
                  "Type": "String"
                },
                {
                  "Name": "ProductArn",
                  "Selector": "$.Payload.product_arn",
                  "Type": "String"
                },
                {
                  "Name": "AffectedObject",
                  "Selector": "$.Payload.object",
                  "Type": "StringMap"
                },
                {
                  "Name": "FunctionName",
                  "Selector": "$.Payload.resource_id",
                  "Type": "String"
                }
              ],
              "inputs": {
                "InputPayload": {
                  "Finding": "{{Finding}}",
                  "parse_id_pattern": "^arn:(?:aws|aws-us-gov|aws-cn):lambda:(?:[a-z]{2}(?:-gov)?-[a-z]+-\\d):\\d{12}:function:([a-zA-Z0-9\\-_]{1,64})$",
                  "expected_control_id": "Lambda.1"
                },
                "Runtime": "python3.7",
                "Handler": "parse_event",
                "Script": "#!/usr/bin/python\n###############################################################################\n#  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.         #\n#                                                                             #\n#  Licensed under the Apache License Version 2.0 (the \"License\"). You may not #\n#  use this file except in compliance with the License. A copy of the License #\n#  is located at                                                              #\n#                                                                             #\n#      http://www.apache.org/licenses/LICENSE-2.0/                            #\n#                                                                             #\n#  or in the \"license\" file accompanying this file. This file is distributed  #\n#  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, express #\n#  or implied. See the License for the specific language governing permis-    #\n#  sions and limitations under the License.                                   #\n###############################################################################\nimport re\n\ndef get_control_id_from_arn(finding_id_arn):\n    check_finding_id = re.match(\n        '^arn:(?:aws|aws-cn|aws-us-gov):securityhub:(?:[a-z]{2}(?:-gov)?-[a-z]+-\\\\d):\\\\d{12}:subscription/aws-foundational-security-best-practices/v/1\\\\.0\\\\.0/(.*)/finding/(?i:[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12})$',\n        finding_id_arn\n    )\n    if check_finding_id:\n        control_id = check_finding_id.group(1)\n        return control_id\n    else:\n        exit(f'ERROR: Finding Id is invalid: {finding_id_arn}')\n\ndef parse_event(event, context):\n    expected_control_id = event['expected_control_id']\n    parse_id_pattern = event['parse_id_pattern']\n    resource_id_matches = []\n    finding = event['Finding']\n    testmode = bool('testmode' in finding)\n\n    finding_id = finding['Id']\n        \n    account_id = finding.get('AwsAccountId', '')\n    if not re.match('^\\\\d{12}$', account_id):\n        exit(f'ERROR: AwsAccountId is invalid: {account_id}')\n\n    control_id = get_control_id_from_arn(finding['Id'])\n\n    # ControlId present and valid\n    if not control_id:\n        exit(f'ERROR: Finding Id is invalid: {finding_id} - missing Control Id')\n\n    # ControlId is the expected value\n    if control_id not in expected_control_id:\n        exit(f'ERROR: Control Id from input ({control_id}) does not match {str(expected_control_id)}')\n\n    # ProductArn present and valid\n    product_arn = finding['ProductArn']\n    if not re.match('^arn:(?:aws|aws-cn|aws-us-gov):securityhub:(?:[a-z]{2}(?:-gov)?-[a-z]+-\\\\d)::product/aws/securityhub$', product_arn):\n        exit(f'ERROR: ProductArn is invalid: {product_arn}')\n\n    resource = finding['Resources'][0]\n\n    # Details\n    details = finding['Resources'][0].get('Details', {})\n\n    # Regex match Id to get remediation-specific identifier\n    identifier_raw = finding['Resources'][0]['Id']\n    resource_id = identifier_raw\n\n    if parse_id_pattern:\n        identifier_match = re.match(\n            parse_id_pattern,\n            identifier_raw\n        )\n\n        if identifier_match:\n            for group in range(1, len(identifier_match.groups())+1):\n                resource_id_matches.append(identifier_match.group(group))\n            resource_id = identifier_match.group(event.get('resource_index', 1))\n        else:\n            exit(f'ERROR: Invalid resource Id {identifier_raw}')   \n\n    if not resource_id:\n        exit('ERROR: Resource Id is missing from the finding json Resources (Id)')\n\n    affected_object = {'Type': resource['Type'], 'Id': resource_id, 'OutputKey': 'Remediation.Output'}\n    return {\n        \"account_id\": account_id,\n        \"resource_id\": resource_id, \n        \"finding_id\": finding_id, \n        \"control_id\": control_id,\n        \"product_arn\": product_arn, \n        \"object\": affected_object,\n        \"matches\": resource_id_matches,\n        \"details\": details,\n        \"testmode\": testmode,\n        \"resource\": resource\n    }"
              }
            },
            {
              "name": "Remediation",
              "action": "aws:executeAutomation",
              "isEnd": false,
              "inputs": {
                "DocumentName": "SHARR-RemoveLambdaPublicAccess",
                "RuntimeParameters": {
                  "FunctionName": "{{ ParseInput.FunctionName }}",
                  "AutomationAssumeRole": "arn:{{global:AWS_PARTITION}}:iam::{{global:ACCOUNT_ID}}:role/SO0111-RemoveLambdaPublicAccess"
                }
              }
            },
            {
              "name": "UpdateFinding",
              "action": "aws:executeAwsApi",
              "inputs": {
                "Service": "securityhub",
                "Api": "BatchUpdateFindings",
                "FindingIdentifiers": [
                  {
                    "Id": "{{ParseInput.FindingId}}",
                    "ProductArn": "{{ParseInput.ProductArn}}"
                  }
                ],
                "Note": {
                  "Text": "Lamdba {{ParseInput.FunctionName}} policy updated to remove public access",
                  "UpdatedBy": "SHARR-AFSBP_1.0.0_Lambda.1"
                },
                "Workflow": {
                  "Status": "RESOLVED"
                }
              },
              "description": "Update finding",
              "isEnd": true
            }
          ]
        },
        "DocumentType": "Automation",
        "Name": "SHARR-AFSBP_1.0.0_Lambda.1"
      },
      "Metadata": {
        "aws:cdk:path": "AFSBPMemberStack/AFSBP Lambda.1/Automation Document"
      },
      "Condition": "AFSBPLambda1EnableLambda1Condition4E1A1855"
    },
    "AFSBPRDS1AutomationDocumentF363990A": {
      "Type": "AWS::SSM::Document",
      "Properties": {
        "Content": {
          "description": "### Document Name - SHARR-AFSBP_1.0.0_RDS.1\n## What does this document do?\nThis document changes public RDS snapshot to private\n\n## Input Parameters\n* Finding: (Required) Security Hub finding details JSON\n* AutomationAssumeRole: (Required) The ARN of the role that allows Automation to perform the actions on your behalf.\n\n## Documentation Links\n* [AFSBP RDS.1](https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-standards-fsbp-controls.html#fsbp-rds-1)\n",
          "schemaVersion": "0.3",
          "assumeRole": "{{ AutomationAssumeRole }}",
          "outputs": [
            "Remediation.Output",
            "ParseInput.AffectedObject"
          ],
          "parameters": {
            "Finding": {
              "type": "StringMap",
              "description": "The input from Step function for RDS.1 finding"
            },
            "AutomationAssumeRole": {
              "type": "String",
              "description": "(Optional) The ARN of the role that allows Automation to perform the actions on your behalf.",
              "default": "",
              "allowedPattern": "^arn:(?:aws|aws-us-gov|aws-cn):iam::\\d{12}:role/[\\w+=,.@-]+"
            }
          },
          "mainSteps": [
            {
              "name": "ParseInput",
              "action": "aws:executeScript",
              "outputs": [
                {
                  "Name": "DBSnapshotId",
                  "Selector": "$.Payload.resource_id",
                  "Type": "String"
                },
                {
                  "Name": "DBSnapshotType",
                  "Selector": "$.Payload.matches[0]",
                  "Type": "String"
                },
                {
                  "Name": "FindingId",
                  "Selector": "$.Payload.finding_id",
                  "Type": "String"
                },
                {
                  "Name": "ProductArn",
                  "Selector": "$.Payload.product_arn",
                  "Type": "String"
                },
                {
                  "Name": "AffectedObject",
                  "Selector": "$.Payload.object",
                  "Type": "StringMap"
                },
                {
                  "Name": "Type",
                  "Selector": "$.Payload.type",
                  "Type": "String"
                }
              ],
              "inputs": {
                "InputPayload": {
                  "Finding": "{{Finding}}",
                  "parse_id_pattern": "^arn:(?:aws|aws-cn|aws-us-gov):rds:(?:[a-z]{2}(?:-gov)?-[a-z]+-\\d):\\d{12}:(cluster-snapshot|snapshot):([a-zA-Z](?:[0-9a-zA-Z]+[-]{1})*[0-9a-zA-Z]{1,})$",
                  "resource_index": 2,
                  "expected_control_id": "RDS.1"
                },
                "Runtime": "python3.7",
                "Handler": "parse_event",
                "Script": "#!/usr/bin/python\n###############################################################################\n#  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.         #\n#                                                                             #\n#  Licensed under the Apache License Version 2.0 (the \"License\"). You may not #\n#  use this file except in compliance with the License. A copy of the License #\n#  is located at                                                              #\n#                                                                             #\n#      http://www.apache.org/licenses/LICENSE-2.0/                            #\n#                                                                             #\n#  or in the \"license\" file accompanying this file. This file is distributed  #\n#  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, express #\n#  or implied. See the License for the specific language governing permis-    #\n#  sions and limitations under the License.                                   #\n###############################################################################\nimport re\n\ndef get_control_id_from_arn(finding_id_arn):\n    check_finding_id = re.match(\n        '^arn:(?:aws|aws-cn|aws-us-gov):securityhub:(?:[a-z]{2}(?:-gov)?-[a-z]+-\\\\d):\\\\d{12}:subscription/aws-foundational-security-best-practices/v/1\\\\.0\\\\.0/(.*)/finding/(?i:[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12})$',\n        finding_id_arn\n    )\n    if check_finding_id:\n        control_id = check_finding_id.group(1)\n        return control_id\n    else:\n        exit(f'ERROR: Finding Id is invalid: {finding_id_arn}')\n\ndef parse_event(event, context):\n    expected_control_id = event['expected_control_id']\n    parse_id_pattern = event['parse_id_pattern']\n    resource_id_matches = []\n    finding = event['Finding']\n    testmode = bool('testmode' in finding)\n\n    finding_id = finding['Id']\n        \n    account_id = finding.get('AwsAccountId', '')\n    if not re.match('^\\\\d{12}$', account_id):\n        exit(f'ERROR: AwsAccountId is invalid: {account_id}')\n\n    control_id = get_control_id_from_arn(finding['Id'])\n\n    # ControlId present and valid\n    if not control_id:\n        exit(f'ERROR: Finding Id is invalid: {finding_id} - missing Control Id')\n\n    # ControlId is the expected value\n    if control_id not in expected_control_id:\n        exit(f'ERROR: Control Id from input ({control_id}) does not match {str(expected_control_id)}')\n\n    # ProductArn present and valid\n    product_arn = finding['ProductArn']\n    if not re.match('^arn:(?:aws|aws-cn|aws-us-gov):securityhub:(?:[a-z]{2}(?:-gov)?-[a-z]+-\\\\d)::product/aws/securityhub$', product_arn):\n        exit(f'ERROR: ProductArn is invalid: {product_arn}')\n\n    resource = finding['Resources'][0]\n\n    # Details\n    details = finding['Resources'][0].get('Details', {})\n\n    # Regex match Id to get remediation-specific identifier\n    identifier_raw = finding['Resources'][0]['Id']\n    resource_id = identifier_raw\n\n    if parse_id_pattern:\n        identifier_match = re.match(\n            parse_id_pattern,\n            identifier_raw\n        )\n\n        if identifier_match:\n            for group in range(1, len(identifier_match.groups())+1):\n                resource_id_matches.append(identifier_match.group(group))\n            resource_id = identifier_match.group(event.get('resource_index', 1))\n        else:\n            exit(f'ERROR: Invalid resource Id {identifier_raw}')   \n\n    if not resource_id:\n        exit('ERROR: Resource Id is missing from the finding json Resources (Id)')\n\n    affected_object = {'Type': resource['Type'], 'Id': resource_id, 'OutputKey': 'Remediation.Output'}\n    return {\n        \"account_id\": account_id,\n        \"resource_id\": resource_id, \n        \"finding_id\": finding_id, \n        \"control_id\": control_id,\n        \"product_arn\": product_arn, \n        \"object\": affected_object,\n        \"matches\": resource_id_matches,\n        \"details\": details,\n        \"testmode\": testmode,\n        \"resource\": resource\n    }"
              },
              "nextStep": "Remediation"
            },
            {
              "name": "Remediation",
              "action": "aws:executeAutomation",
              "isEnd": false,
              "inputs": {
                "DocumentName": "SHARR-MakeRDSSnapshotPrivate",
                "RuntimeParameters": {
                  "DBSnapshotId": "{{ParseInput.DBSnapshotId}}",
                  "DBSnapshotType": "{{ParseInput.DBSnapshotType}}",
                  "AutomationAssumeRole": "arn:{{global:AWS_PARTITION}}:iam::{{global:ACCOUNT_ID}}:role/SO0111-MakeRDSSnapshotPrivate"
                }
              },
              "nextStep": "UpdateFinding"
            },
            {
              "name": "UpdateFinding",
              "action": "aws:executeAwsApi",
              "inputs": {
                "Service": "securityhub",
                "Api": "BatchUpdateFindings",
                "FindingIdentifiers": [
                  {
                    "Id": "{{ParseInput.FindingId}}",
                    "ProductArn": "{{ParseInput.ProductArn}}"
                  }
                ],
                "Note": {
                  "Text": "RDS DB Snapshot modified to private",
                  "UpdatedBy": "SHARR-AFSBP_1.0.0_RDS.1"
                },
                "Workflow": {
                  "Status": "RESOLVED"
                }
              },
              "description": "Update finding",
              "isEnd": true
            }
          ]
        },
        "DocumentType": "Automation",
        "Name": "SHARR-AFSBP_1.0.0_RDS.1"
      },
      "Metadata": {
        "aws:cdk:path": "AFSBPMemberStack/AFSBP RDS.1/Automation Document"
      },
      "Condition": "AFSBPRDS1EnableRDS1ConditionB553606B"
    },
    "AFSBPRDS6AutomationDocument3E6395D2": {
      "Type": "AWS::SSM::Document",
      "Properties": {
        "Content": {
          "description": "### Document Name - SHARR-AFSBP_1.0.0_RDS.6\n\n## What does this document do?\nThis document enables `Enhanced Monitoring` on a given Amazon RDS instance by calling another SSM document.\n\n## Input Parameters\n* Finding: (Required) Security Hub finding details JSON\n* AutomationAssumeRole: (Required) The ARN of the role that allows Automation to perform the actions on your behalf.\n\n## Output Parameters\n* VerifyRemediation.Output - The standard HTTP response from the ModifyDBInstance API.\n## Documentation Links\n\n* [AFSBP RDS.6](https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-standards-fsbp-controls.html#fsbp-rds-6)\n",
          "schemaVersion": "0.3",
          "assumeRole": "{{ AutomationAssumeRole }}",
          "parameters": {
            "AutomationAssumeRole": {
              "type": "String",
              "description": "(Required) The ARN of the role that allows Automation to perform the actions on your behalf.",
              "allowedPattern": "^arn:(?:aws|aws-us-gov|aws-cn):iam::\\d{12}:role/[\\w+=,.@-]+"
            },
            "Finding": {
              "type": "StringMap",
              "description": "The input from Step function for RDS7 finding"
            }
          },
          "outputs": [
            "Remediation.Output",
            "ParseInput.AffectedObject"
          ],
          "mainSteps": [
            {
              "name": "ParseInput",
              "action": "aws:executeScript",
              "outputs": [
                {
                  "Name": "ResourceId",
                  "Selector": "$.Payload.details.AwsRdsDbInstance.DbiResourceId",
                  "Type": "String"
                },
                {
                  "Name": "FindingId",
                  "Selector": "$.Payload.finding_id",
                  "Type": "String"
                },
                {
                  "Name": "ProductArn",
                  "Selector": "$.Payload.product_arn",
                  "Type": "String"
                },
                {
                  "Name": "AffectedObject",
                  "Selector": "$.Payload.object",
                  "Type": "StringMap"
                }
              ],
              "inputs": {
                "InputPayload": {
                  "Finding": "{{Finding}}",
                  "parse_id_pattern": "",
                  "expected_control_id": "RDS.6"
                },
                "Runtime": "python3.7",
                "Handler": "parse_event",
                "Script": "#!/usr/bin/python\n###############################################################################\n#  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.         #\n#                                                                             #\n#  Licensed under the Apache License Version 2.0 (the \"License\"). You may not #\n#  use this file except in compliance with the License. A copy of the License #\n#  is located at                                                              #\n#                                                                             #\n#      http://www.apache.org/licenses/LICENSE-2.0/                            #\n#                                                                             #\n#  or in the \"license\" file accompanying this file. This file is distributed  #\n#  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, express #\n#  or implied. See the License for the specific language governing permis-    #\n#  sions and limitations under the License.                                   #\n###############################################################################\nimport re\n\ndef get_control_id_from_arn(finding_id_arn):\n    check_finding_id = re.match(\n        '^arn:(?:aws|aws-cn|aws-us-gov):securityhub:(?:[a-z]{2}(?:-gov)?-[a-z]+-\\\\d):\\\\d{12}:subscription/aws-foundational-security-best-practices/v/1\\\\.0\\\\.0/(.*)/finding/(?i:[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12})$',\n        finding_id_arn\n    )\n    if check_finding_id:\n        control_id = check_finding_id.group(1)\n        return control_id\n    else:\n        exit(f'ERROR: Finding Id is invalid: {finding_id_arn}')\n\ndef parse_event(event, context):\n    expected_control_id = event['expected_control_id']\n    parse_id_pattern = event['parse_id_pattern']\n    resource_id_matches = []\n    finding = event['Finding']\n    testmode = bool('testmode' in finding)\n\n    finding_id = finding['Id']\n        \n    account_id = finding.get('AwsAccountId', '')\n    if not re.match('^\\\\d{12}$', account_id):\n        exit(f'ERROR: AwsAccountId is invalid: {account_id}')\n\n    control_id = get_control_id_from_arn(finding['Id'])\n\n    # ControlId present and valid\n    if not control_id:\n        exit(f'ERROR: Finding Id is invalid: {finding_id} - missing Control Id')\n\n    # ControlId is the expected value\n    if control_id not in expected_control_id:\n        exit(f'ERROR: Control Id from input ({control_id}) does not match {str(expected_control_id)}')\n\n    # ProductArn present and valid\n    product_arn = finding['ProductArn']\n    if not re.match('^arn:(?:aws|aws-cn|aws-us-gov):securityhub:(?:[a-z]{2}(?:-gov)?-[a-z]+-\\\\d)::product/aws/securityhub$', product_arn):\n        exit(f'ERROR: ProductArn is invalid: {product_arn}')\n\n    resource = finding['Resources'][0]\n\n    # Details\n    details = finding['Resources'][0].get('Details', {})\n\n    # Regex match Id to get remediation-specific identifier\n    identifier_raw = finding['Resources'][0]['Id']\n    resource_id = identifier_raw\n\n    if parse_id_pattern:\n        identifier_match = re.match(\n            parse_id_pattern,\n            identifier_raw\n        )\n\n        if identifier_match:\n            for group in range(1, len(identifier_match.groups())+1):\n                resource_id_matches.append(identifier_match.group(group))\n            resource_id = identifier_match.group(event.get('resource_index', 1))\n        else:\n            exit(f'ERROR: Invalid resource Id {identifier_raw}')   \n\n    if not resource_id:\n        exit('ERROR: Resource Id is missing from the finding json Resources (Id)')\n\n    affected_object = {'Type': resource['Type'], 'Id': resource_id, 'OutputKey': 'Remediation.Output'}\n    return {\n        \"account_id\": account_id,\n        \"resource_id\": resource_id, \n        \"finding_id\": finding_id, \n        \"control_id\": control_id,\n        \"product_arn\": product_arn, \n        \"object\": affected_object,\n        \"matches\": resource_id_matches,\n        \"details\": details,\n        \"testmode\": testmode,\n        \"resource\": resource\n    }"
              },
              "isEnd": false
            },
            {
              "name": "GetMonitoringRoleArn",
              "action": "aws:executeAwsApi",
              "description": "## GetRole API to get EnhancedMonitoring IAM role ARN\n",
              "timeoutSeconds": 600,
              "isEnd": false,
              "inputs": {
                "Service": "iam",
                "Api": "GetRole",
                "RoleName": "SO0111-RDSMonitoring-remediationRole"
              },
              "outputs": [
                {
                  "Name": "Arn",
                  "Selector": "$.Role.Arn",
                  "Type": "String"
                }
              ]
            },
            {
              "name": "Remediation",
              "action": "aws:executeAutomation",
              "isEnd": false,
              "inputs": {
                "DocumentName": "SHARR-EnableEnhancedMonitoringOnRDSInstance",
                "RuntimeParameters": {
                  "ResourceId": "{{ ParseInput.ResourceId }}",
                  "MonitoringRoleArn": "{{GetMonitoringRoleArn.Arn}}",
                  "AutomationAssumeRole": "arn:{{global:AWS_PARTITION}}:iam::{{global:ACCOUNT_ID}}:role/SO0111-EnableEnhancedMonitoringOnRDSInstance"
                }
              }
            },
            {
              "name": "UpdateFinding",
              "action": "aws:executeAwsApi",
              "inputs": {
                "Service": "securityhub",
                "Api": "BatchUpdateFindings",
                "FindingIdentifiers": [
                  {
                    "Id": "{{ParseInput.FindingId}}",
                    "ProductArn": "{{ParseInput.ProductArn}}"
                  }
                ],
                "Note": {
                  "Text": "Enhanced Monitoring enabled on RDS DB cluster",
                  "UpdatedBy": "SHARR-AFSBP_1.0.0_RDS.6"
                },
                "Workflow": {
                  "Status": "RESOLVED"
                }
              },
              "description": "Update finding",
              "isEnd": true
            }
          ]
        },
        "DocumentType": "Automation",
        "Name": "SHARR-AFSBP_1.0.0_RDS.6"
      },
      "Metadata": {
        "aws:cdk:path": "AFSBPMemberStack/AFSBP RDS.6/Automation Document"
      },
      "Condition": "AFSBPRDS6EnableRDS6ConditionB5AA0302"
    },
    "AFSBPRDS7AutomationDocumentD26D79A2": {
      "Type": "AWS::SSM::Document",
      "Properties": {
        "Content": {
          "description": "### Document Name - SHARR-AFSBP_1.0.0_RDS.7\n\n## What does this document do?\nThis document enables `Deletion Protection` on a given Amazon RDS cluster by calling another SSM document.\n\n## Input Parameters\n* Finding: (Required) Security Hub finding details JSON\n* AutomationAssumeRole: (Required) The ARN of the role that allows Automation to perform the actions on your behalf.\n\n## Output Parameters\n* Remediation.Output - The standard HTTP response from the ModifyDBInstance API.\n\n## Documentation Links\n* [AFSBP RDS.7](https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-standards-fsbp-controls.html#fsbp-rds-7)\n",
          "schemaVersion": "0.3",
          "assumeRole": "{{ AutomationAssumeRole }}",
          "parameters": {
            "AutomationAssumeRole": {
              "type": "String",
              "description": "(Required) The ARN of the role that allows Automation to perform the actions on your behalf.",
              "allowedPattern": "^arn:(?:aws|aws-us-gov|aws-cn):iam::\\d{12}:role/[\\w+=,.@-]+"
            },
            "Finding": {
              "type": "StringMap",
              "description": "The input from Step function for RDS7 finding"
            }
          },
          "outputs": [
            "Remediation.Output",
            "ParseInput.AffectedObject"
          ],
          "mainSteps": [
            {
              "name": "ParseInput",
              "action": "aws:executeScript",
              "outputs": [
                {
                  "Name": "ResourceId",
                  "Selector": "$.Payload.details.AwsRdsDbCluster.DbClusterResourceId",
                  "Type": "String"
                },
                {
                  "Name": "FindingId",
                  "Selector": "$.Payload.finding_id",
                  "Type": "String"
                },
                {
                  "Name": "ProductArn",
                  "Selector": "$.Payload.product_arn",
                  "Type": "String"
                },
                {
                  "Name": "AffectedObject",
                  "Selector": "$.Payload.object",
                  "Type": "StringMap"
                }
              ],
              "inputs": {
                "InputPayload": {
                  "Finding": "{{Finding}}",
                  "parse_id_pattern": "",
                  "expected_control_id": "RDS.7"
                },
                "Runtime": "python3.7",
                "Handler": "parse_event",
                "Script": "#!/usr/bin/python\n###############################################################################\n#  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.         #\n#                                                                             #\n#  Licensed under the Apache License Version 2.0 (the \"License\"). You may not #\n#  use this file except in compliance with the License. A copy of the License #\n#  is located at                                                              #\n#                                                                             #\n#      http://www.apache.org/licenses/LICENSE-2.0/                            #\n#                                                                             #\n#  or in the \"license\" file accompanying this file. This file is distributed  #\n#  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, express #\n#  or implied. See the License for the specific language governing permis-    #\n#  sions and limitations under the License.                                   #\n###############################################################################\nimport re\n\ndef get_control_id_from_arn(finding_id_arn):\n    check_finding_id = re.match(\n        '^arn:(?:aws|aws-cn|aws-us-gov):securityhub:(?:[a-z]{2}(?:-gov)?-[a-z]+-\\\\d):\\\\d{12}:subscription/aws-foundational-security-best-practices/v/1\\\\.0\\\\.0/(.*)/finding/(?i:[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12})$',\n        finding_id_arn\n    )\n    if check_finding_id:\n        control_id = check_finding_id.group(1)\n        return control_id\n    else:\n        exit(f'ERROR: Finding Id is invalid: {finding_id_arn}')\n\ndef parse_event(event, context):\n    expected_control_id = event['expected_control_id']\n    parse_id_pattern = event['parse_id_pattern']\n    resource_id_matches = []\n    finding = event['Finding']\n    testmode = bool('testmode' in finding)\n\n    finding_id = finding['Id']\n        \n    account_id = finding.get('AwsAccountId', '')\n    if not re.match('^\\\\d{12}$', account_id):\n        exit(f'ERROR: AwsAccountId is invalid: {account_id}')\n\n    control_id = get_control_id_from_arn(finding['Id'])\n\n    # ControlId present and valid\n    if not control_id:\n        exit(f'ERROR: Finding Id is invalid: {finding_id} - missing Control Id')\n\n    # ControlId is the expected value\n    if control_id not in expected_control_id:\n        exit(f'ERROR: Control Id from input ({control_id}) does not match {str(expected_control_id)}')\n\n    # ProductArn present and valid\n    product_arn = finding['ProductArn']\n    if not re.match('^arn:(?:aws|aws-cn|aws-us-gov):securityhub:(?:[a-z]{2}(?:-gov)?-[a-z]+-\\\\d)::product/aws/securityhub$', product_arn):\n        exit(f'ERROR: ProductArn is invalid: {product_arn}')\n\n    resource = finding['Resources'][0]\n\n    # Details\n    details = finding['Resources'][0].get('Details', {})\n\n    # Regex match Id to get remediation-specific identifier\n    identifier_raw = finding['Resources'][0]['Id']\n    resource_id = identifier_raw\n\n    if parse_id_pattern:\n        identifier_match = re.match(\n            parse_id_pattern,\n            identifier_raw\n        )\n\n        if identifier_match:\n            for group in range(1, len(identifier_match.groups())+1):\n                resource_id_matches.append(identifier_match.group(group))\n            resource_id = identifier_match.group(event.get('resource_index', 1))\n        else:\n            exit(f'ERROR: Invalid resource Id {identifier_raw}')   \n\n    if not resource_id:\n        exit('ERROR: Resource Id is missing from the finding json Resources (Id)')\n\n    affected_object = {'Type': resource['Type'], 'Id': resource_id, 'OutputKey': 'Remediation.Output'}\n    return {\n        \"account_id\": account_id,\n        \"resource_id\": resource_id, \n        \"finding_id\": finding_id, \n        \"control_id\": control_id,\n        \"product_arn\": product_arn, \n        \"object\": affected_object,\n        \"matches\": resource_id_matches,\n        \"details\": details,\n        \"testmode\": testmode,\n        \"resource\": resource\n    }"
              },
              "isEnd": false
            },
            {
              "name": "Remediation",
              "action": "aws:executeAutomation",
              "isEnd": false,
              "inputs": {
                "DocumentName": "SHARR-EnableRDSClusterDeletionProtection",
                "RuntimeParameters": {
                  "ClusterId": "{{ ParseInput.ResourceId }}",
                  "AutomationAssumeRole": "arn:{{global:AWS_PARTITION}}:iam::{{global:ACCOUNT_ID}}:role/SO0111-EnableRDSClusterDeletionProtection"
                }
              }
            },
            {
              "name": "UpdateFinding",
              "action": "aws:executeAwsApi",
              "inputs": {
                "Service": "securityhub",
                "Api": "BatchUpdateFindings",
                "FindingIdentifiers": [
                  {
                    "Id": "{{ParseInput.FindingId}}",
                    "ProductArn": "{{ParseInput.ProductArn}}"
                  }
                ],
                "Note": {
                  "Text": "Deletion protection enabled on RDS DB cluster",
                  "UpdatedBy": "SHARR-AFSBP_1.0.0_RDS.7"
                },
                "Workflow": {
                  "Status": "RESOLVED"
                }
              },
              "description": "Update finding",
              "isEnd": true
            }
          ]
        },
        "DocumentType": "Automation",
        "Name": "SHARR-AFSBP_1.0.0_RDS.7"
      },
      "Metadata": {
        "aws:cdk:path": "AFSBPMemberStack/AFSBP RDS.7/Automation Document"
      },
      "Condition": "AFSBPRDS7EnableRDS7ConditionC6475B87"
    },
    "AFSBPS31AutomationDocument59937F91": {
      "Type": "AWS::SSM::Document",
      "Properties": {
        "Content": {
          "description": "### Document Name - SHARR-AFSBP_1.0.0_S3.1\n\n## What does this document do?\nThis document blocks public access to all buckets by default at the account level.\n\n## Input Parameters\n* Finding: (Required) Security Hub finding details JSON\n* AutomationAssumeRole: (Required) The ARN of the role that allows Automation to perform the actions on your behalf.\n\n## Output Parameters\n* Remediation.Output\n\n## Documentation Links\n* [AFSBP v1.0.0 S3.1](https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-standards-fsbp-controls.html#fsbp-s3-1)\n",
          "schemaVersion": "0.3",
          "assumeRole": "{{ AutomationAssumeRole }}",
          "outputs": [
            "ParseInput.AffectedObject",
            "Remediation.Output"
          ],
          "parameters": {
            "Finding": {
              "type": "StringMap",
              "description": "The input from Step function for finding"
            },
            "AutomationAssumeRole": {
              "type": "String",
              "description": "(Optional) The ARN of the role that allows Automation to perform the actions on your behalf.",
              "default": "",
              "allowedPattern": "^arn:(?:aws|aws-us-gov|aws-cn):iam::\\d{12}:role/[\\w+=,.@-]+"
            }
          },
          "mainSteps": [
            {
              "name": "ParseInput",
              "action": "aws:executeScript",
              "outputs": [
                {
                  "Name": "AccountId",
                  "Selector": "$.Payload.account_id",
                  "Type": "String"
                },
                {
                  "Name": "FindingId",
                  "Selector": "$.Payload.finding_id",
                  "Type": "String"
                },
                {
                  "Name": "ProductArn",
                  "Selector": "$.Payload.product_arn",
                  "Type": "String"
                },
                {
                  "Name": "AffectedObject",
                  "Selector": "$.Payload.object",
                  "Type": "StringMap"
                }
              ],
              "inputs": {
                "InputPayload": {
                  "Finding": "{{Finding}}",
                  "parse_id_pattern": "",
                  "expected_control_id": [
                    "S3.1"
                  ]
                },
                "Runtime": "python3.7",
                "Handler": "parse_event",
                "Script": "#!/usr/bin/python\n###############################################################################\n#  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.         #\n#                                                                             #\n#  Licensed under the Apache License Version 2.0 (the \"License\"). You may not #\n#  use this file except in compliance with the License. A copy of the License #\n#  is located at                                                              #\n#                                                                             #\n#      http://www.apache.org/licenses/LICENSE-2.0/                            #\n#                                                                             #\n#  or in the \"license\" file accompanying this file. This file is distributed  #\n#  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, express #\n#  or implied. See the License for the specific language governing permis-    #\n#  sions and limitations under the License.                                   #\n###############################################################################\nimport re\n\ndef get_control_id_from_arn(finding_id_arn):\n    check_finding_id = re.match(\n        '^arn:(?:aws|aws-cn|aws-us-gov):securityhub:(?:[a-z]{2}(?:-gov)?-[a-z]+-\\\\d):\\\\d{12}:subscription/aws-foundational-security-best-practices/v/1\\\\.0\\\\.0/(.*)/finding/(?i:[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12})$',\n        finding_id_arn\n    )\n    if check_finding_id:\n        control_id = check_finding_id.group(1)\n        return control_id\n    else:\n        exit(f'ERROR: Finding Id is invalid: {finding_id_arn}')\n\ndef parse_event(event, context):\n    expected_control_id = event['expected_control_id']\n    parse_id_pattern = event['parse_id_pattern']\n    resource_id_matches = []\n    finding = event['Finding']\n    testmode = bool('testmode' in finding)\n\n    finding_id = finding['Id']\n        \n    account_id = finding.get('AwsAccountId', '')\n    if not re.match('^\\\\d{12}$', account_id):\n        exit(f'ERROR: AwsAccountId is invalid: {account_id}')\n\n    control_id = get_control_id_from_arn(finding['Id'])\n\n    # ControlId present and valid\n    if not control_id:\n        exit(f'ERROR: Finding Id is invalid: {finding_id} - missing Control Id')\n\n    # ControlId is the expected value\n    if control_id not in expected_control_id:\n        exit(f'ERROR: Control Id from input ({control_id}) does not match {str(expected_control_id)}')\n\n    # ProductArn present and valid\n    product_arn = finding['ProductArn']\n    if not re.match('^arn:(?:aws|aws-cn|aws-us-gov):securityhub:(?:[a-z]{2}(?:-gov)?-[a-z]+-\\\\d)::product/aws/securityhub$', product_arn):\n        exit(f'ERROR: ProductArn is invalid: {product_arn}')\n\n    resource = finding['Resources'][0]\n\n    # Details\n    details = finding['Resources'][0].get('Details', {})\n\n    # Regex match Id to get remediation-specific identifier\n    identifier_raw = finding['Resources'][0]['Id']\n    resource_id = identifier_raw\n\n    if parse_id_pattern:\n        identifier_match = re.match(\n            parse_id_pattern,\n            identifier_raw\n        )\n\n        if identifier_match:\n            for group in range(1, len(identifier_match.groups())+1):\n                resource_id_matches.append(identifier_match.group(group))\n            resource_id = identifier_match.group(event.get('resource_index', 1))\n        else:\n            exit(f'ERROR: Invalid resource Id {identifier_raw}')   \n\n    if not resource_id:\n        exit('ERROR: Resource Id is missing from the finding json Resources (Id)')\n\n    affected_object = {'Type': resource['Type'], 'Id': resource_id, 'OutputKey': 'Remediation.Output'}\n    return {\n        \"account_id\": account_id,\n        \"resource_id\": resource_id, \n        \"finding_id\": finding_id, \n        \"control_id\": control_id,\n        \"product_arn\": product_arn, \n        \"object\": affected_object,\n        \"matches\": resource_id_matches,\n        \"details\": details,\n        \"testmode\": testmode,\n        \"resource\": resource\n    }"
              },
              "isEnd": false
            },
            {
              "name": "Remediation",
              "action": "aws:executeAutomation",
              "isEnd": false,
              "inputs": {
                "DocumentName": "SHARR-ConfigureS3PublicAccessBlock",
                "RuntimeParameters": {
                  "AccountId": "{{ParseInput.AccountId}}",
                  "AutomationAssumeRole": "arn:{{global:AWS_PARTITION}}:iam::{{global:ACCOUNT_ID}}:role/SO0111-ConfigureS3PublicAccessBlock",
                  "RestrictPublicBuckets": true,
                  "BlockPublicAcls": true,
                  "IgnorePublicAcls": true,
                  "BlockPublicPolicy": true
                }
              }
            },
            {
              "name": "UpdateFinding",
              "action": "aws:executeAwsApi",
              "inputs": {
                "Service": "securityhub",
                "Api": "BatchUpdateFindings",
                "FindingIdentifiers": [
                  {
                    "Id": "{{ParseInput.FindingId}}",
                    "ProductArn": "{{ParseInput.ProductArn}}"
                  }
                ],
                "Note": {
                  "Text": "Configured the account to block public S3 access.",
                  "UpdatedBy": "SHARR-AFSBP_1.0.0_S3.1"
                },
                "Workflow": {
                  "Status": "RESOLVED"
                }
              },
              "description": "Update finding",
              "isEnd": true
            }
          ]
        },
        "DocumentType": "Automation",
        "Name": "SHARR-AFSBP_1.0.0_S3.1"
      },
      "Metadata": {
        "aws:cdk:path": "AFSBPMemberStack/AFSBP S3.1/Automation Document"
      },
      "Condition": "AFSBPS31EnableS31Condition57BE9782"
    },
    "AFSBPS32AutomationDocument6F58830D": {
      "Type": "AWS::SSM::Document",
      "Properties": {
        "Content": {
          "description": "### Document Name - SHARR-AFSBP_1.0.0_S3.2\n\n## What does this document do?\nThis document blocks public access to an S3 bucket.\n\n## Input Parameters\n* Finding: (Required) Security Hub finding details JSON\n* AutomationAssumeRole: (Required) The ARN of the role that allows Automation to perform the actions on your behalf.\n\n## Output Parameters\n* Remediation.Output\n\n## Documentation Links\n* [AFSBP v1.0.0 S3.2](https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-standards-fsbp-controls.html#fsbp-s3-2)\n* [AFSBP v1.0.0 S3.3](https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-standards-fsbp-controls.html#fsbp-s3-3)\n",
          "schemaVersion": "0.3",
          "assumeRole": "{{ AutomationAssumeRole }}",
          "outputs": [
            "ParseInput.AffectedObject",
            "Remediation.Output"
          ],
          "parameters": {
            "Finding": {
              "type": "StringMap",
              "description": "The input from Step function for finding"
            },
            "AutomationAssumeRole": {
              "type": "String",
              "description": "(Optional) The ARN of the role that allows Automation to perform the actions on your behalf.",
              "default": "",
              "allowedPattern": "^arn:(?:aws|aws-us-gov|aws-cn):iam::\\d{12}:role/[\\w+=,.@-]+"
            }
          },
          "mainSteps": [
            {
              "name": "ParseInput",
              "action": "aws:executeScript",
              "outputs": [
                {
                  "Name": "BucketName",
                  "Selector": "$.Payload.resource_id",
                  "Type": "String"
                },
                {
                  "Name": "FindingId",
                  "Selector": "$.Payload.finding_id",
                  "Type": "String"
                },
                {
                  "Name": "ProductArn",
                  "Selector": "$.Payload.product_arn",
                  "Type": "String"
                },
                {
                  "Name": "AffectedObject",
                  "Selector": "$.Payload.object",
                  "Type": "StringMap"
                }
              ],
              "inputs": {
                "InputPayload": {
                  "Finding": "{{Finding}}",
                  "parse_id_pattern": "^arn:(?:aws|aws-cn|aws-us-gov):s3:::([A-Za-z0-9.-]{3,63})$",
                  "expected_control_id": [
                    "S3.2",
                    "S3.3"
                  ]
                },
                "Runtime": "python3.7",
                "Handler": "parse_event",
                "Script": "#!/usr/bin/python\n###############################################################################\n#  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.         #\n#                                                                             #\n#  Licensed under the Apache License Version 2.0 (the \"License\"). You may not #\n#  use this file except in compliance with the License. A copy of the License #\n#  is located at                                                              #\n#                                                                             #\n#      http://www.apache.org/licenses/LICENSE-2.0/                            #\n#                                                                             #\n#  or in the \"license\" file accompanying this file. This file is distributed  #\n#  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, express #\n#  or implied. See the License for the specific language governing permis-    #\n#  sions and limitations under the License.                                   #\n###############################################################################\nimport re\n\ndef get_control_id_from_arn(finding_id_arn):\n    check_finding_id = re.match(\n        '^arn:(?:aws|aws-cn|aws-us-gov):securityhub:(?:[a-z]{2}(?:-gov)?-[a-z]+-\\\\d):\\\\d{12}:subscription/aws-foundational-security-best-practices/v/1\\\\.0\\\\.0/(.*)/finding/(?i:[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12})$',\n        finding_id_arn\n    )\n    if check_finding_id:\n        control_id = check_finding_id.group(1)\n        return control_id\n    else:\n        exit(f'ERROR: Finding Id is invalid: {finding_id_arn}')\n\ndef parse_event(event, context):\n    expected_control_id = event['expected_control_id']\n    parse_id_pattern = event['parse_id_pattern']\n    resource_id_matches = []\n    finding = event['Finding']\n    testmode = bool('testmode' in finding)\n\n    finding_id = finding['Id']\n        \n    account_id = finding.get('AwsAccountId', '')\n    if not re.match('^\\\\d{12}$', account_id):\n        exit(f'ERROR: AwsAccountId is invalid: {account_id}')\n\n    control_id = get_control_id_from_arn(finding['Id'])\n\n    # ControlId present and valid\n    if not control_id:\n        exit(f'ERROR: Finding Id is invalid: {finding_id} - missing Control Id')\n\n    # ControlId is the expected value\n    if control_id not in expected_control_id:\n        exit(f'ERROR: Control Id from input ({control_id}) does not match {str(expected_control_id)}')\n\n    # ProductArn present and valid\n    product_arn = finding['ProductArn']\n    if not re.match('^arn:(?:aws|aws-cn|aws-us-gov):securityhub:(?:[a-z]{2}(?:-gov)?-[a-z]+-\\\\d)::product/aws/securityhub$', product_arn):\n        exit(f'ERROR: ProductArn is invalid: {product_arn}')\n\n    resource = finding['Resources'][0]\n\n    # Details\n    details = finding['Resources'][0].get('Details', {})\n\n    # Regex match Id to get remediation-specific identifier\n    identifier_raw = finding['Resources'][0]['Id']\n    resource_id = identifier_raw\n\n    if parse_id_pattern:\n        identifier_match = re.match(\n            parse_id_pattern,\n            identifier_raw\n        )\n\n        if identifier_match:\n            for group in range(1, len(identifier_match.groups())+1):\n                resource_id_matches.append(identifier_match.group(group))\n            resource_id = identifier_match.group(event.get('resource_index', 1))\n        else:\n            exit(f'ERROR: Invalid resource Id {identifier_raw}')   \n\n    if not resource_id:\n        exit('ERROR: Resource Id is missing from the finding json Resources (Id)')\n\n    affected_object = {'Type': resource['Type'], 'Id': resource_id, 'OutputKey': 'Remediation.Output'}\n    return {\n        \"account_id\": account_id,\n        \"resource_id\": resource_id, \n        \"finding_id\": finding_id, \n        \"control_id\": control_id,\n        \"product_arn\": product_arn, \n        \"object\": affected_object,\n        \"matches\": resource_id_matches,\n        \"details\": details,\n        \"testmode\": testmode,\n        \"resource\": resource\n    }"
              },
              "isEnd": false
            },
            {
              "name": "Remediation",
              "action": "aws:executeAutomation",
              "isEnd": false,
              "inputs": {
                "DocumentName": "SHARR-ConfigureS3BucketPublicAccessBlock",
                "RuntimeParameters": {
                  "BucketName": "{{ParseInput.BucketName}}",
                  "AutomationAssumeRole": "arn:{{global:AWS_PARTITION}}:iam::{{global:ACCOUNT_ID}}:role/SO0111-ConfigureS3BucketPublicAccessBlock",
                  "RestrictPublicBuckets": true,
                  "BlockPublicAcls": true,
                  "IgnorePublicAcls": true,
                  "BlockPublicPolicy": true
                }
              }
            },
            {
              "name": "UpdateFinding",
              "action": "aws:executeAwsApi",
              "inputs": {
                "Service": "securityhub",
                "Api": "BatchUpdateFindings",
                "FindingIdentifiers": [
                  {
                    "Id": "{{ParseInput.FindingId}}",
                    "ProductArn": "{{ParseInput.ProductArn}}"
                  }
                ],
                "Note": {
                  "Text": "Disabled public access to S3 bucket.",
                  "UpdatedBy": "SHARR-AFSBP_1.0.0_S3.2"
                },
                "Workflow": {
                  "Status": "RESOLVED"
                }
              },
              "description": "Update finding",
              "isEnd": true
            }
          ]
        },
        "DocumentType": "Automation",
        "Name": "SHARR-AFSBP_1.0.0_S3.2"
      },
      "Metadata": {
        "aws:cdk:path": "AFSBPMemberStack/AFSBP S3.2/Automation Document"
      },
      "Condition": "AFSBPS32EnableS32ConditionE7296642"
    },
    "AFSBPS35AutomationDocument19342239": {
      "Type": "AWS::SSM::Document",
      "Properties": {
        "Content": {
          "description": "### Document Name - SHARR-AFSBP_1.0.0_S3.5\n\n## What does this document do?\nThis document adds a bucket policy to restrict internet access to https only.\n\n## Input Parameters\n* Finding: (Required) Security Hub finding details JSON\n* AutomationAssumeRole: (Required) The ARN of the role that allows Automation to perform the actions on your behalf.\n\n## Output Parameters\n* Remediation.Output\n\n## Documentation Links\n* [AFSBP v1.0.0 S3.5](https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-standards-fsbp-controls.html#fsbp-s3-5)\n",
          "schemaVersion": "0.3",
          "assumeRole": "{{ AutomationAssumeRole }}",
          "outputs": [
            "ParseInput.AffectedObject",
            "Remediation.Output"
          ],
          "parameters": {
            "Finding": {
              "type": "StringMap",
              "description": "The input from Step function for finding"
            },
            "AutomationAssumeRole": {
              "type": "String",
              "description": "(Optional) The ARN of the role that allows Automation to perform the actions on your behalf.",
              "default": "",
              "allowedPattern": "^arn:(?:aws|aws-us-gov|aws-cn):iam::\\d{12}:role/[\\w+=,.@-]+"
            }
          },
          "mainSteps": [
            {
              "name": "ParseInput",
              "action": "aws:executeScript",
              "outputs": [
                {
                  "Name": "BucketName",
                  "Selector": "$.Payload.resource_id",
                  "Type": "String"
                },
                {
                  "Name": "FindingId",
                  "Selector": "$.Payload.finding_id",
                  "Type": "String"
                },
                {
                  "Name": "ProductArn",
                  "Selector": "$.Payload.product_arn",
                  "Type": "String"
                },
                {
                  "Name": "AffectedObject",
                  "Selector": "$.Payload.object",
                  "Type": "StringMap"
                },
                {
                  "Name": "AccountId",
                  "Selector": "$.Payload.account_id",
                  "Type": "String"
                }
              ],
              "inputs": {
                "InputPayload": {
                  "Finding": "{{Finding}}",
                  "parse_id_pattern": "^arn:(?:aws|aws-cn|aws-us-gov):s3:::([A-Za-z0-9.-]{3,63})$",
                  "expected_control_id": [
                    "S3.5"
                  ]
                },
                "Runtime": "python3.7",
                "Handler": "parse_event",
                "Script": "#!/usr/bin/python\n###############################################################################\n#  Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.         #\n#                                                                             #\n#  Licensed under the Apache License Version 2.0 (the \"License\"). You may not #\n#  use this file except in compliance with the License. A copy of the License #\n#  is located at                                                              #\n#                                                                             #\n#      http://www.apache.org/licenses/LICENSE-2.0/                            #\n#                                                                             #\n#  or in the \"license\" file accompanying this file. This file is distributed  #\n#  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, express #\n#  or implied. See the License for the specific language governing permis-    #\n#  sions and limitations under the License.                                   #\n###############################################################################\nimport re\n\ndef get_control_id_from_arn(finding_id_arn):\n    check_finding_id = re.match(\n        '^arn:(?:aws|aws-cn|aws-us-gov):securityhub:(?:[a-z]{2}(?:-gov)?-[a-z]+-\\\\d):\\\\d{12}:subscription/aws-foundational-security-best-practices/v/1\\\\.0\\\\.0/(.*)/finding/(?i:[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12})$',\n        finding_id_arn\n    )\n    if check_finding_id:\n        control_id = check_finding_id.group(1)\n        return control_id\n    else:\n        exit(f'ERROR: Finding Id is invalid: {finding_id_arn}')\n\ndef parse_event(event, context):\n    expected_control_id = event['expected_control_id']\n    parse_id_pattern = event['parse_id_pattern']\n    resource_id_matches = []\n    finding = event['Finding']\n    testmode = bool('testmode' in finding)\n\n    finding_id = finding['Id']\n        \n    account_id = finding.get('AwsAccountId', '')\n    if not re.match('^\\\\d{12}$', account_id):\n        exit(f'ERROR: AwsAccountId is invalid: {account_id}')\n\n    control_id = get_control_id_from_arn(finding['Id'])\n\n    # ControlId present and valid\n    if not control_id:\n        exit(f'ERROR: Finding Id is invalid: {finding_id} - missing Control Id')\n\n    # ControlId is the expected value\n    if control_id not in expected_control_id:\n        exit(f'ERROR: Control Id from input ({control_id}) does not match {str(expected_control_id)}')\n\n    # ProductArn present and valid\n    product_arn = finding['ProductArn']\n    if not re.match('^arn:(?:aws|aws-cn|aws-us-gov):securityhub:(?:[a-z]{2}(?:-gov)?-[a-z]+-\\\\d)::product/aws/securityhub$', product_arn):\n        exit(f'ERROR: ProductArn is invalid: {product_arn}')\n\n    resource = finding['Resources'][0]\n\n    # Details\n    details = finding['Resources'][0].get('Details', {})\n\n    # Regex match Id to get remediation-specific identifier\n    identifier_raw = finding['Resources'][0]['Id']\n    resource_id = identifier_raw\n\n    if parse_id_pattern:\n        identifier_match = re.match(\n            parse_id_pattern,\n            identifier_raw\n        )\n\n        if identifier_match:\n            for group in range(1, len(identifier_match.groups())+1):\n                resource_id_matches.append(identifier_match.group(group))\n            resource_id = identifier_match.group(event.get('resource_index', 1))\n        else:\n            exit(f'ERROR: Invalid resource Id {identifier_raw}')   \n\n    if not resource_id:\n        exit('ERROR: Resource Id is missing from the finding json Resources (Id)')\n\n    affected_object = {'Type': resource['Type'], 'Id': resource_id, 'OutputKey': 'Remediation.Output'}\n    return {\n        \"account_id\": account_id,\n        \"resource_id\": resource_id, \n        \"finding_id\": finding_id, \n        \"control_id\": control_id,\n        \"product_arn\": product_arn, \n        \"object\": affected_object,\n        \"matches\": resource_id_matches,\n        \"details\": details,\n        \"testmode\": testmode,\n        \"resource\": resource\n    }"
              },
              "isEnd": false
            },
            {
              "name": "Remediation",
              "action": "aws:executeAutomation",
              "isEnd": false,
              "inputs": {
                "DocumentName": "SHARR-SetSSLBucketPolicy",
                "RuntimeParameters": {
                  "BucketName": "{{ParseInput.BucketName}}",
                  "AccountId": "{{ParseInput.AccountId}}",
                  "AutomationAssumeRole": "arn:{{global:AWS_PARTITION}}:iam::{{global:ACCOUNT_ID}}:role/SO0111-SetSSLBucketPolicy"
                }
              }
            },
            {
              "name": "UpdateFinding",
              "action": "aws:executeAwsApi",
              "inputs": {
                "Service": "securityhub",
                "Api": "BatchUpdateFindings",
                "FindingIdentifiers": [
                  {
                    "Id": "{{ParseInput.FindingId}}",
                    "ProductArn": "{{ParseInput.ProductArn}}"
                  }
                ],
                "Note": {
                  "Text": "Added SSL-only access policy to S3 bucket.",
                  "UpdatedBy": "SHARR-AFSBP_1.0.0_S3.5"
                },
                "Workflow": {
                  "Status": "RESOLVED"
                }
              },
              "description": "Update finding",
              "isEnd": true
            }
          ]
        },
        "DocumentType": "Automation",
        "Name": "SHARR-AFSBP_1.0.0_S3.5"
      },
      "Metadata": {
        "aws:cdk:path": "AFSBPMemberStack/AFSBP S3.5/Automation Document"
      },
      "Condition": "AFSBPS35EnableS35Condition73E5EDAD"
    }
  }
}