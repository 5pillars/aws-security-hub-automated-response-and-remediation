#
# Copyright 2023 Amazon.com, Inc. or its affiliates. All Rights Reserved.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of this
# software and associated documentation files (the "Software"), to deal in the Software
# without restriction, including without limitation the rights to use, copy, modify,
# merge, publish, distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
# INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
# PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#
schemaVersion: "0.3"
description: |
  # Document name - AWS-EnableNeptuneDbAuditLogsToCloudWatch

  ## What does this document do?
  The AWS-EnableNeptuneDbAuditLogsToCloudWatch runbook will utilize the
  [ModifyDBCluster](https://docs.aws.amazon.com/neptune/latest/apiref/API_ModifyDBCluster.html) API call to enable 
  Amazon Neptune DB clusters to send audit logs to Amazon CloudWatch. The Amazon Neptune DB cluster must be in an 
  available state and the engine type must be set to `neptune`.

  ## Input Parameters
  * AutomationAssumeRole: (Optional) The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) 
    role that allows Systems Manager Automation to perform the actions on your behalf. If no role is specified,
    Systems Manager Automation uses the permissions of the user that starts this runbook.
    * Default: ""
  * DbClusterResourceId: (Required) The Amazon Neptune DB cluster resourceId for which the audit logging should be 
    enabled.

  ## Output Parameters
  * EnableNeptuneDbAuditLogs.EnableNeptuneDbAuditLogsResponse: The output from the ModifyDBCluster call.
  * VerifyNeptuneDbAuditLogs.VerifyNeptuneDbAuditLogsResponse: The output of the DescribeDBCluster call.

assumeRole: "{{ AutomationAssumeRole }}"
parameters:
  AutomationAssumeRole:
    type: AWS::IAM::Role::Arn
    description: |
      (Optional) The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that
      allows Systems Manager Automation to perform the actions on your behalf. If no role is specified,
      Systems Manager Automation uses the permissions of the user that starts this runbook.
    default: ""
  DbClusterResourceId:
    type: String
    description: |
      (Required) The Amazon Neptune DB cluster resourceId for which the audit logging should be enabled.
    allowedPattern: ^cluster-[a-zA-Z0-9-]{1,1016}$

outputs:
  - EnableNeptuneDbAuditLogs.EnableNeptuneDbAuditLogsResponse
  - VerifyNeptuneDbAuditLogs.VerifyNeptuneDbAuditLogsResponse

mainSteps:
  - name: GetNeptuneDbClusterIdentifier
    description: |
      ## GetNeptuneDbClusterIdentifier
      This step will use the Amazon Neptune DBClusterResourceId to retrieve the DBClusterIdentifier.
      ## Outputs
      * DBClusterIdentifier: The Amazon Neptune DB cluster identifier.
    action: aws:executeAwsApi
    inputs:
      Service: rds
      Api: DescribeDBClusters
      Filters:
        - Name: db-cluster-resource-id
          Values:
            - "{{ DbClusterResourceId }}"
    outputs:
      - Name: DBClusterIdentifier
        Selector: $.DBClusters[0].DBClusterIdentifier
        Type: String

  - name: VerifyNeptuneDbEngine
    description: |
      ## VerifyNeptuneDbEngine
      This step will verify the Amazon Neptune DB engine type as `neptune` in order to prevent inadvertent modification 
      to any other RDS engine type.
    action: aws:assertAwsResourceProperty
    timeoutSeconds: 600
    inputs:
      Service: neptune
      Api: DescribeDBClusters
      DBClusterIdentifier: "{{ GetNeptuneDbClusterIdentifier.DBClusterIdentifier }}"
      PropertySelector: $.DBClusters[0].Engine
      DesiredValues:
        - neptune

  - name: VerifyNeptuneDbStatus
    description: |
      ## VerifyNeptuneDbStatus
      This step will check the Amazon Neptune DB cluster status is `available` in order to ensure that the database is 
      ready to accept changes from the runbook.
    action: aws:waitForAwsResourceProperty
    timeoutSeconds: 600
    inputs:
      Service: neptune
      Api: DescribeDBClusters
      DBClusterIdentifier: "{{ GetNeptuneDbClusterIdentifier.DBClusterIdentifier }}"
      PropertySelector: $.DBClusters[0].Status
      DesiredValues:
        - available

  - name: EnableNeptuneDbAuditLogs
    description: |
      ## EnableNeptuneDbAuditLogs
      This step will enable Amazon CloudWatch audit logs for the Amazon Neptune DB cluster.
      ## Outputs
      * EnableNeptuneDbAuditLogsResponse: The output from the ModifyDBCluster call.
    action: aws:executeAwsApi
    inputs:
      Service: neptune
      Api: ModifyDBCluster
      DBClusterIdentifier: "{{ GetNeptuneDbClusterIdentifier.DBClusterIdentifier }}"
      CloudwatchLogsExportConfiguration:
        EnableLogTypes: 
          - audit
    outputs:
      - Name: EnableNeptuneDbAuditLogsResponse
        Selector: $
        Type: StringMap

  - name: VerifyNeptuneDbLogStatus
    description: |
      ## VerifyNeptuneDbLogStatus
      This step will check the Amazon Neptune DB cluster status after the audit log changes have been made and is ready
      to accept API calls again.
    action: aws:waitForAwsResourceProperty
    timeoutSeconds: 600
    inputs:
      Service: neptune
      Api: DescribeDBClusters
      DBClusterIdentifier: "{{ GetNeptuneDbClusterIdentifier.DBClusterIdentifier }}"
      PropertySelector: $.DBClusters[0].Status
      DesiredValues:
        - available

  - name: VerifyNeptuneDbAuditLogs
    description: |
      ## VerifyNeptuneDbAuditLogs
      This step verifies the audit logs to Amazon CloudWatch for the Amazon Neptune DB cluster have been successfully 
      set using DescribeDBClusters API.
      ## Outputs
      * VerifyNeptuneDbAuditLogsResponse: Output of the step indicating successful audit log configuration for 
        Amazon Neptune DB cluster.
    action: aws:executeScript
    timeoutSeconds: 600
    inputs:
      Runtime: python3.8
      Handler: handler
      InputPayload:
        DBClusterIdentifier: "{{ GetNeptuneDbClusterIdentifier.DBClusterIdentifier }}"
        DbClusterResourceId: "{{ DbClusterResourceId }}"
      Script: |-
        %%SCRIPT=EnableNeptuneDbAuditLogsToCloudWatch.py%%
    outputs:
      - Name: VerifyNeptuneDbAuditLogsResponse
        Selector: $.Payload.VerifyNeptuneDbAuditLogsEnabled
        Type: String