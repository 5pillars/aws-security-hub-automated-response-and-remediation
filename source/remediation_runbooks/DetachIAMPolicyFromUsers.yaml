schemaVersion: "0.3"
description: |
  ### Document Name - SHARR-DetachIAMPolicyFromUsers

  ## What does this document do?
  This document disables active keys that have not been rotated for more than 90 days. Note that this remediation is **DISRUPTIVE**. It will disabled keys that have been used within the previous 90 days by have not been rotated by using the [UpdateAccessKey API](https://docs.aws.amazon.com/IAM/latest/APIReference/API_UpdateAccessKey.html). Please note, this automation document requires AWS Config to be enabled.

  ## Input Parameters
  * Finding: (Required) Security Hub finding details JSON
  * AutomationAssumeRole: (Required) The ARN of the role that allows Automation to perform the actions on your behalf.

  ## Output Parameters
  * DetachIAMPolicyFromUsers.Output

assumeRole: "{{ AutomationAssumeRole }}"
parameters:
  AutomationAssumeRole:
    type: String
    description: (Required) The ARN of the role that allows Automation to perform the actions on your behalf.
    allowedPattern: ^arn:(aws[a-zA-Z-]*)?:iam::\d{12}:role/[\w+=,.@-]+$
  IAMResourceId:
    type: String
    description: (Required) IAM resource unique identifier.
    allowedPattern: ^[\w+=,.@_-]{1,128}$
outputs:
  - DetachIAMPolicyFromUsers.Output
mainSteps:
  - name: DetachIAMPolicyFromUsers
    action: aws:executeScript
    timeoutSeconds: 600
    isEnd: true
    description: |
      ## DetachIAMPolicyFromUsers

      This step deattach wild card privilege polices from users.
      ## Outputs
      * Output: Success message or failure Exception.
    inputs:
      Runtime: python3.7
      Handler: deattach_iam_policy_from_users
      InputPayload:
        IAMResourceId: "{{ IAMResourceId }}"
      Script: |-
        %%SCRIPT=DetachIAMPolicyFromUsers.py%%

    outputs:
      - Name: Output
        Selector: $.Payload
        Type: StringMap
